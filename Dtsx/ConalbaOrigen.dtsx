<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/28/2024 11:54:16 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-PJEIDUL"
  DTS:CreatorName="DESKTOP-PJEIDUL\Leonardo Mancero"
  DTS:DTSID="{C5ECAD1F-485A-43D3-AC9F-8B7580C2D69F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="12298"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="39"
  DTS:VersionGUID="{CC81F403-89CE-4D7D-95B8-E2F9A7F1CE46}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{93EB8763-83D6-4614-9DCA-0E7F200B9B6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="conexionDestino">
      <DTS:VariableValue
        DTS:DataType="8">Server=192.168.1.100;Database=SEICOII;User Id=Integrity;Password=conalBa0608;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5970596-9505-45EA-A6AF-2E6F85FD6866}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="conexionOrigen">
      <DTS:VariableValue
        DTS:DataType="8">Server=192.168.1.100;Database=SEICOII;User Id=Integrity;Password=conalBa0608;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Transferencia de Datos"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{5BAAEFA1-60F3-4DE3-9FB3-AA7AE45CDE73}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Transferencia de Datos"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d3ccaf3431b242539c8b716f26511831"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::conexionDestino,User::conexionOrigen">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_d3ccaf3431b242539c8b716f26511831.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6DEBB0CA-D366-45DF-807B-F7B6E42E2F10}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d3ccaf3431b242539c8b716f26511831</RootNamespace>
    <AssemblyName>ST_d3ccaf3431b242539c8b716f26511831</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\isc_2\AppData\Local\Temp\Vsta\SSIS_ST160\VstaHuJIOF4T5UqSqx7HMqY__w\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Utils\stringHandler.cs" />
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Entidades\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Settings.get_Default():ST_d3ccaf3431b242539c8b716f26511831.Properties.Sett" +
    "ings")]

namespace ST_d3ccaf3431b242539c8b716f26511831.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;
using ST_d3ccaf3431b242539c8b716f26511831.Utils;
using Newtonsoft.Json;
#endregion

namespace ST_d3ccaf3431b242539c8b716f26511831
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        public string conexionOrigen { get; set; }
        public string conexionDestino { get; set; }

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            conexionOrigen = Dts.Variables["User::conexionOrigen"].Value.ToString();
            conexionDestino = Dts.Variables["User::conexionDestino"].Value.ToString();

            var consulta = consultar();
            if (consulta.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta.Tables.Count; i++)
                {
                    InsertTables(consulta.Tables[i]);
                }                
            }

        }

        public static string DataRowToJson(DataRow dataRow)
        {
            var dict = new System.Collections.Generic.Dictionary<string, object>();
            foreach (DataColumn column in dataRow.Table.Columns)
            {
                dict[column.ColumnName] = dataRow[column];
            }

            return JsonConvert.SerializeObject(dict);
        }

        private void InsertTables(DataTable dt)
        {
            try
            {                                 

                    foreach (DataRow row in dt.Rows)
                    {

                        var json = DataRowToJson(row);

                        SqlDataAdapter ad = new SqlDataAdapter();
                        DataSet ds = new DataSet();
                        SqlConnection Conexion = new SqlConnection(conexionDestino);
                        SqlCommand cmd = new SqlCommand();
                        Conexion.Open();
                        cmd.Connection = Conexion;
                        cmd.CommandText = stringHandler.sp_RegistroMigracionFa;
                        cmd.CommandType = CommandType.StoredProcedure;
                        cmd.Parameters.Add(new SqlParameter("@accion", stringHandler.accionRegistro.Trim()));
                        cmd.Parameters.Add(new SqlParameter("@nombreTable", row["nombreTable"].ToString()));
                        cmd.Parameters.Add(new SqlParameter("@json", json));
                        ad = new SqlDataAdapter(cmd);
                        ad.Fill(ds);
                        Conexion.Close();

                        UpdateTableMigracion(row[0].ToString(), stringHandler.accionRegistro, row["nombreTable"].ToString());
                    }
                
            }
            catch (Exception ex)
            {

                throw new Exception(ex.Message.ToString());
            }
        }

        private DataSet consultar()
        {
            DataTable dt = new DataTable();
            SqlDataAdapter ad = new SqlDataAdapter();
            DataSet ds = new DataSet();
            try
            {
                SqlConnection Conexion = new SqlConnection(conexionOrigen);
                SqlCommand cmd = new SqlCommand();
                Conexion.Open();
                cmd.Connection = Conexion;
                cmd.CommandText = stringHandler.sp_MigracionCodigo;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add(new SqlParameter("@accion", stringHandler.accionCodigo1.Trim()));
                ad = new SqlDataAdapter(cmd);
                ad.Fill(ds);
                Conexion.Close();
                return ds;
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message.ToString());
            }


        }

        private void UpdateTableMigracion(string codigo, string tipo, string nombreTabla)
        {
            try
            {
                DataTable dt = new DataTable();
                SqlDataAdapter ad = new SqlDataAdapter();
                DataSet ds = new DataSet();
                try
                {
                    SqlConnection Conexion = new SqlConnection(conexionOrigen);
                    SqlCommand cmd = new SqlCommand();
                    Conexion.Open();
                    cmd.Connection = Conexion;
                    cmd.CommandText = stringHandler.sp_MigracionCodigo;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add(new SqlParameter("@accion", stringHandler.accionModificaMigracion.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@codigoU", codigo.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@tipoU", tipo.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@nombreTableU", nombreTabla.Trim()));
                    ad = new SqlDataAdapter(cmd);
                    ad.Fill(ds);
                    Conexion.Close();
                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message.ToString());
                }
            }
            catch (Exception)
            {

                throw;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d3ccaf3431b242539c8b716f26511831.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_d3ccaf3431b242539c8b716f26511831</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_d3ccaf3431b242539c8b716f26511831</msb:DisplayName>
    <msb:ProjectId>{7B219049-C4E4-4AA4-A809-547E0C8070BD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d3ccaf3431b242539c8b716f26511831.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Utils\stringHandler.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d3ccaf3431b242539c8b716f26511831")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d3ccaf3431b242539c8b716f26511831")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Utils\stringHandler.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace ST_d3ccaf3431b242539c8b716f26511831.Utils
{
    public static class stringHandler
    {
        internal static string sp_MigracionCodigo = "sp_MigracionCodigo";
        internal static string sp_RegistroMigracionFa = "sp_RegistroMigracionFa";
        internal static string accionCodigo1 = "1";
        internal static string accionRegistro = "I";
        internal static string accionModificaMigracion = "U";
       



    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d3ccaf3431b242539c8b716f26511831.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALG1KmcAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAyjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHg6AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA0BoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACs
OgAAAAAAAEgAAAACAAUAPCUAAIQUAAABAAAAAAAAAMA5AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCoA
ABMwAwCIAAAAAQAAEQICKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKAIAAAYCAigQAAAK
bxEAAApyKwAAcG8SAAAKbxMAAApvFAAACigEAAAGAigIAAAGCgZvFQAACm8WAAAKFjEoFgsrFgIG
bxUAAAoHbxcAAAooBwAABgcXWAsHBm8VAAAKbxYAAAoy3CobMAQAWgAAAAIAABFzGAAACgoCbxkA
AApvGgAACm8bAAAKCysfB28cAAAKdBYAAAEMBghvHQAACgIIbx4AAApvHwAACgdvIAAACi3Z3hEH
dRcAAAENCSwGCW8hAAAK3AYoIgAACioAAAEQAAACABcAK0IAEQAAAAAbMAUALgEAAAMAABEDbyMA
AApvGwAACgo46QAAAAZvHAAACnQSAAABCwcoBgAABgxzJAAACiZzJQAACg0CKAMAAAZzJgAAChME
cycAAAoRBG8oAAAKJREEbykAAAolfgcAAARvKgAACiUabysAAAolbywAAApyVwAAcH4JAAAEby0A
AApzLgAACm8vAAAKJiVvLAAACnJnAABwB3KBAABwbzAAAApvFAAACnMuAAAKby8AAAomJW8sAAAK
cpkAAHAIcy4AAApvLwAACiZzMQAACglvMgAACiYRBG8zAAAKAgcWbzQAAApvFAAACn4JAAAEB3KB
AABwbzAAAApvFAAACigJAAAGBm8gAAAKOgz////eFAZ1FwAAARMFEQUsBxEFbyEAAArc3hBvNQAA
Cm8UAAAKczYAAAp6KgAAQTQAAAIAAAAMAAAA+wAAAAcBAAAUAAAAAAAAAAAAAAAAAAAAHQEAAB0B
AAAQAAAAGgAAARswBACKAAAABAAAEXM3AAAKJnMkAAAKJnMlAAAKCgIoAQAABnMmAAAKC3MnAAAK
B28oAAAKJQdvKQAACiV+BgAABG8qAAAKJRpvKwAACiVvLAAACnJXAABwfggAAARvLQAACnMuAAAK
by8AAAomczEAAAoGbzIAAAomB28zAAAKBgzeEG81AAAKbxQAAApzNgAACnoIKgAAARAAAAAAEgBm
eAAQGgAAARswBADgAAAABQAAEXM3AAAKJnMkAAAKJnMlAAAKCgIoAQAABnMmAAAKC3MnAAAKB28o
AAAKJQdvKQAACiV+BgAABG8qAAAKJRpvKwAACiVvLAAACnJXAABwfgoAAARvLQAACnMuAAAKby8A
AAomJW8sAAAKcqUAAHADby0AAApzLgAACm8vAAAKJiVvLAAACnK3AABwBG8tAAAKcy4AAApvLwAA
CiYlbywAAApyxQAAcAVvLQAACnMuAAAKby8AAAomczEAAAoGbzIAAAomB28zAAAK3hBvNQAACm8U
AAAKczYAAAp63gMm/hoqARwAAAAAEgC4ygAQGgAAAQAAAADc3AADGgAAAR4CKDgAAAoqHgIoOQAA
CiqufgMAAAQtHnLhAABw0AMAAAIoOgAACm87AAAKczwAAAqAAwAABH4DAAAEKhp+BAAABCoeAoAE
AAAEKhp+BQAABCoeAig9AAAKKi5zEAAABoAFAAAEKs5yUwEAcIAGAAAEcnkBAHCABwAABHKnAQBw
gAgAAARyqwEAcIAJAAAEcq8BAHCACgAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAA
AAUAbAAAAJAGAAAjfgAA/AYAAIQJAAAjU3RyaW5ncwAAAACAEAAAtAEAACNVUwA0EgAAEAAAACNH
VUlEAAAARBIAAEACAAAjQmxvYgAAAAAAAAACAAABVx2iCQkDAAAA+gEzABYAAAEAAAA1AAAABgAA
AA0AAAASAAAACAAAAD0AAAACAAAAFgAAAAUAAAADAAAABQAAAAgAAAABAAAAAQAAAAcAAAABAAAA
AQAAAAAAowQBAAAAAAAGAFMDRAcGAOIDRAcGAJ8CMQcPALgHAAAGAMwClwUGADYDlwUGABcDlwUG
AMkDlwUGAHMDlwUGAIwDlwUGAOMClwUGAP4CEAQKAKcDUgQKAPUBUgQGAGcCRAcOAO4IkwASABgJ
HAgOAGYJkwAGADMAqAAGAOQI4gQGAAoHkggOADUFkwAGAFYB4gQOAEMBkwAOABcGAgkGACUG4gQG
AO4E4gQGAIICMQcGANAGZAcGAGAGggUWAFICjQQWALMCjQQWACwCbQUKAHsEUgQaABIIlQEaAE0B
lQEOAKkFkwAOABECkwAOAL0FkwAeAEEJQgYOAOkFkwAOAPsGAgkOABIBAgkOAAoGLwYOAAgBLwYO
ALkBkwAOANIFAgkGACwE4gQOAO4GAgkOAP4GLwYGAMAB4gQGAGIB4gQGAHoJlwUAAAAAQAAAAAAA
AQABAAEAEAAqBQEAOQABAAEAAAAQAGsHxwdRAAMACwAAARAAPgjHB4UABQAPAIEBEADgBkcIUQAG
ABIAAwEAAMQIAABtAAsAEwABAMcAIgEBAOcAIgERAPMEJQERAOUBKQERAB0BLQETAGwGIgETAHAA
IgETACUAIgETALMGIgETAEAFIgEGBmgAMQFWgLQINAFWgMUBNAFQIAAAAACGCP8EOAABAFggAAAA
AIYIEgUQAAEAYSAAAAAAhgiGBjgAAgBpIAAAAACGCJoGEAACAHQgAAAAAIYAMAUGAAMACCEAAAAA
lgBSBjgBAwCAIQAAAACBAAEIPgEEAPAiAAAAAIEAwgZEAQUAmCMAAAAAgQBYBUkBBQCgJAAAAACG
GCQHBgAIAKgkAAAAAIMYJAcGAAgAsCQAAAAAkwjMBlABCADcJAAAAACTCM0BVQEIAOMkAAAAAJMI
2QFaAQgA6yQAAAAAlgj2CGABCQDyJAAAAACGGCQHBgAJAPokAAAAAJEYKgdlAQkABiUAAAAAkRgq
B2UBCQAAAAEACgQAAAEACgQAAAEAbgkAAAEA6wgAAAEAfwYAAAIArgYAAAMAhwAAAAEACgQJACQH
AQARACQHBgAZACQHCgApACQHEAAxACQHEAA5ACQHEABBACQHEABJACQHEABRACQHEABZACQHEABh
ACQHEABpACQHBgB5ACQHBgDhACQHBgABASQHFQBxALwIIQARAQ4IJwAZAdAELQAhAQAENAChACoE
OACBAPYHPAAxATcJQgApAdAERgAMACQHBgCRADkBYgDBAIYIZwAxARYHbQCpACsJNACxAIYBOACR
ANAEcgAMANkEeACpAE0JgAC5AEoCBgBBAdsIhADBANIIlwBRASQHBgCBACQHBgDJACQHEABZASQH
BgBhASUFBgBZAfsFnQBpAVYJEABpAbUBowBZAaUIqgCBAekEOACJASQHsAB5AcMAtgCRANAEvwBR
ASQHxACRAcsEywBhAUQCBgCRANAE0QDRAC0BOADRACQHEADBACQHBgBxACQHBgChACQHBgCZAXQB
5gCZAXYJ7wDpACQH9QAJASQHBgAIADAAGAEIADQAHQEgAGsAHQEhAGsAHQEuAAsAfAEuABMAhQEu
ABsApAEuACMArQEuACsA1gEuADMA1gEuADsA1gEuAEMArQEuAEsA3AEuAFMA1gEuAFsA8wFAAGsA
HQFBAGsAHQFDAGMAHQFgAGsAHQFjAHMAHQFpAHsApAGAAGsAHQGJAHsApAGhAGsAHQEbAEwAiQDW
AN8AAgABAAMAAwAEAAUAAAAWBWkBAACeBmkBAADQBm0BAADtAXIBAAD6CHcBAgABAAMAAQACAAMA
AgADAAUAAQAEAAUAAgAMAAcAAgANAAkAAQAOAAkAAgAPAAsAWwAEgAAAAQAAAHMjsIcAAAAAAAAB
AAAABAAAAAAAAAAAAAAA/QCfAAAAAAAQAAAAAAAAAAAAAAAGATMEAAAAAAQAAAAAAAAAAAAAAP0A
kwAAAAAABAAAAAAAAAAAAAAA/QBxCAAAAAAEAAAAAAAAAAAAAAD9AOIEAAAAABAAAAAAAAAAAAAA
AAYBSQAAAAAADQAAAAAAAAAAAAAADwFCBgAAAAAAAAAAAQAAAHUHAAAGAAIAAAAAAABTVF9kM2Nj
YWYzNDMxYjI0MjUzOWM4YjcxNmYyNjUxMTgzMQBhY2Npb25Db2RpZ28xAERpY3Rpb25hcnlgMgA8
TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBzcF9SZWdpc3Ry
b01pZ3JhY2lvbkZhAG5vbWJyZVRhYmxhAFN5c3RlbS5EYXRhAG1zY29ybGliAFN5c3RlbS5Db2xs
ZWN0aW9ucy5HZW5lcmljAEFkZAA8Y29uZXhpb25PcmlnZW4+a19fQmFja2luZ0ZpZWxkADxjb25l
eGlvbkRlc3Rpbm8+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfTWVzc2FnZQBnZXRfVGFibGUARGF0YVRhYmxlAFZhcmlhYmxlAElEaXNwb3Nh
YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9Db2x1bW5OYW1lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAc2V0X0NvbW1hbmRUeXBlAEZhaWx1cmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBDbG9zZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUA
dmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBT
Y3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZDNjY2FmMzQzMWIyNDI1
MzljOGI3MTZmMjY1MTE4MzEuZGxsAEZpbGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAFRyaW0A
RW51bQByZXNvdXJjZU1hbgBnZXRfY29uZXhpb25PcmlnZW4Ac2V0X2NvbmV4aW9uT3JpZ2VuAE9w
ZW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAGFjY2lvbk1vZGlmaWNhTWlncmFjaW9uAFVwZGF0ZVRh
YmxlTWlncmFjaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5
c3RlbS5SZWZsZWN0aW9uAERhdGFUYWJsZUNvbGxlY3Rpb24ARGF0YUNvbHVtbkNvbGxlY3Rpb24A
U3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBzZXRfQ29ubmVjdGlvbgBE
YkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAE5l
d3RvbnNvZnQuSnNvbgBEYXRhUm93VG9Kc29uAEN1bHR1cmVJbmZvAHNwX01pZ3JhY2lvbkNvZGln
bwBjb2RpZ28AZ2V0X2NvbmV4aW9uRGVzdGlubwBzZXRfY29uZXhpb25EZXN0aW5vAHRpcG8AYWNj
aW9uUmVnaXN0cm8AY29uc3VsdGFyAGdldF9SZXNvdXJjZU1hbmFnZXIAc3RyaW5nSGFuZGxlcgBT
cWxQYXJhbWV0ZXIAU3FsRGF0YUFkYXB0ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3Rv
cgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJlc291cmNlcwBTVF9kM2NjYWYzNDMxYjI0MjUzOWM4YjcxNmYyNjUxMTgzMS5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZDNjY2FmMzQz
MWIyNDI1MzljOGI3MTZmMjY1MTE4MzEuUHJvcGVydGllcwBnZXRfVGFibGVzAEluc2VydFRhYmxl
cwBnZXRfVmFyaWFibGVzAFN5c3RlbS5XaW5kb3dzLkZvcm1zLlZpc3VhbFN0eWxlcwBTZXR0aW5n
cwBTVF9kM2NjYWYzNDMxYjI0MjUzOWM4YjcxNmYyNjUxMTgzMS5VdGlscwBTeXN0ZW0uV2luZG93
cy5Gb3JtcwBnZXRfQ29sdW1ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAZ2V0X1BhcmFtZXRlcnMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X1Jvd3MAU2VyaWFsaXplT2JqZWN0AGR0AERh
dGFTZXQAZ2V0X0RlZmF1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFZpc3VhbFN0eWxlRWxlbWVu
dABnZXRfQ3VycmVudABnZXRfQ291bnQASnNvbkNvbnZlcnQATW92ZU5leHQAc2V0X0NvbW1hbmRU
ZXh0AERhdGFSb3cAZGF0YVJvdwBnZXRfQXNzZW1ibHkAAAApVQBzAGUAcgA6ADoAYwBvAG4AZQB4
AGkAbwBuAE8AcgBpAGcAZQBuAAArVQBzAGUAcgA6ADoAYwBvAG4AZQB4AGkAbwBuAEQAZQBzAHQA
aQBuAG8AAA9AAGEAYwBjAGkAbwBuAAAZQABuAG8AbQBiAHIAZQBUAGEAYgBsAGUAABduAG8AbQBi
AHIAZQBUAGEAYgBsAGUAAAtAAGoAcwBvAG4AABFAAGMAbwBkAGkAZwBvAFUAAA1AAHQAaQBwAG8A
VQAAG0AAbgBvAG0AYgByAGUAVABhAGIAbABlAFUAAHFTAFQAXwBkADMAYwBjAGEAZgAzADQAMwAx
AGIAMgA0ADIANQAzADkAYwA4AGIANwAxADYAZgAyADYANQAxADEAOAAzADEALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAACVzAHAAXwBNAGkAZwByAGEAYwBpAG8AbgBD
AG8AZABpAGcAbwAALXMAcABfAFIAZQBnAGkAcwB0AHIAbwBNAGkAZwByAGEAYwBpAG8AbgBGAGEA
AAMxAAADSQAAA1UAAAC9RhZJxYgiSqIQgqbyyhs6AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF9
BQcCEkEIBSAAEoCJBSAAEoCNBiABEoCRHAMgABwDIAAOBSAAEoCVAyAACAUgARJhCA4HBBUSTQIO
HBJVElkSXQYVEk0CDhwEIAASYQUgABKAnQQgABJVBSABHBJZByACARMAEwEDIAACBAABDhwNBwYS
VRJJDhJBEmUSXQUgABKApQUgAQESZQYgAQERgLkFIAASgL0FIAIBDhwIIAESgMUSgMUEIAEcDgYg
AQESgK0FIAEIEkEEIAEcCAgHAxJBEmUSQQYHAhJBEmUIAAESgM0RgNEFIAASgNUHIAIBDhKA1Qi3
elxWGTTgiQiJhF3NgIDMkQgwrU/msqau7QQAAAAABAEAAAACBg4DBhJ1AwYSeQMGEhACBggDBhEY
BQABDhJJBSABARJhBCAAEkEGIAMBDg4OBAAAEnUEAAASeQUAAQESeQQAABIQAwAAAQMoAA4ECAAS
dQQIABJ5BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAA
AAAAKAEAI1NUX2QzY2NhZjM0MzFiMjQyNTM5YzhiNzE2ZjI2NTExODMxAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKA6AAAAAAAA
AAAAALo6AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsOgAAAAAAAAAAAAAAAF9Db3JEbGxNYWlu
AG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQCwh3MjAAABALCHcyM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfAGQAMwBjAGMAYQBmADMANAAzADEAYgAyADQAMgA1ADMAOQBjADgAYgA3ADEANgBmADIANgA1
ADEAMQA4ADMAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5ADAA
NwA1AC4AMwA0ADcAMwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGQAMwBjAGMAYQBmADMANAAzADEAYgAyADQAMgA1ADMAOQBjADgAYgA3ADEANgBmADIANgA1ADEA
MQA4ADMAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AZAAzAGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYA
MgA2ADUAMQAxADgAMwAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGQAMwBjAGMAYQBmADMANAAzADEAYgAyADQAMgA1ADMAOQBjADgAYgA3ADEANgBmADIA
NgA1ADEAMQA4ADMAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOQAwADcANQAuADMANAA3ADMANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOQAwADcANQAuADMANAA3ADMANgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADMOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="193,42"
          Id="Package\Transferencia de Datos"
          TopLeft="312,155" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>