<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/28/2024 11:54:16 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-PJEIDUL"
  DTS:CreatorName="DESKTOP-PJEIDUL\Leonardo Mancero"
  DTS:DTSID="{C5ECAD1F-485A-43D3-AC9F-8B7580C2D69F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="12298"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="68"
  DTS:VersionGUID="{8E3A0454-7972-408B-8F25-7FE52050DAC0}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{93EB8763-83D6-4614-9DCA-0E7F200B9B6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="conexionDestino">
      <DTS:VariableValue
        DTS:DataType="8">Server=192.168.1.100;Database=SEICOII;User Id=Integrity;Password=conalBa0608;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5970596-9505-45EA-A6AF-2E6F85FD6866}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="conexionOrigen">
      <DTS:VariableValue
        DTS:DataType="8">Server=192.168.1.100;Database=SEICOII;User Id=Integrity;Password=conalBa0608;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Transferencia de Datos"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{5BAAEFA1-60F3-4DE3-9FB3-AA7AE45CDE73}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Transferencia de Datos"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d3ccaf3431b242539c8b716f26511831"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::conexionDestino,User::conexionOrigen">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_d3ccaf3431b242539c8b716f26511831.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6DEBB0CA-D366-45DF-807B-F7B6E42E2F10}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d3ccaf3431b242539c8b716f26511831</RootNamespace>
    <AssemblyName>ST_d3ccaf3431b242539c8b716f26511831</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\isc_2\AppData\Local\Temp\Vsta\SSIS_ST160\VstaHuJIOF4T5UqSqx7HMqY__w\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Utils\stringHandler.cs" />
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Entidades\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Settings.get_Default():ST_d3ccaf3431b242539c8b716f26511831.Properties.Sett" +
    "ings")]

namespace ST_d3ccaf3431b242539c8b716f26511831.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;
using ST_d3ccaf3431b242539c8b716f26511831.Utils;
using Newtonsoft.Json;
#endregion

namespace ST_d3ccaf3431b242539c8b716f26511831
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        public string conexionOrigen { get; set; }
        public string conexionDestino { get; set; }

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            conexionOrigen = Dts.Variables["User::conexionOrigen"].Value.ToString();
            conexionDestino = Dts.Variables["User::conexionDestino"].Value.ToString();
            #region CODIGO1
            var consulta = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo1);
            if (consulta.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta.Tables.Count; i++)
                {
                    InsertTables(consulta.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta = null;

            var consultaUp = consultar(stringHandler.DestinoUpdate.Trim(), stringHandler.accionCodigo1);
            if (consultaUp.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consultaUp.Tables.Count; i++)
                {
                    InsertTables(consultaUp.Tables[i], stringHandler.DestinoUpdate.Trim());
                }
            }

            consultaUp = null;
            #endregion
            #region CODIGO2
            var consulta2 = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo2);
            if (consulta2.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta2.Tables.Count; i++)
                {
                    InsertTables(consulta2.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta2=null; 

            var consultaUp2 = consultar(stringHandler.DestinoUpdate.Trim(), stringHandler.accionCodigo2);
            if (consultaUp2.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consultaUp2.Tables.Count; i++)
                {
                    InsertTables(consulta2.Tables[i], stringHandler.DestinoUpdate.Trim());
                }
            }
            consultaUp2=null;
            #endregion
            #region CODIGO3
            var consulta3= consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo3);
            if (consulta3.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta3.Tables.Count; i++)
                {
                    InsertTables(consulta3.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta3=null; 
            #endregion
        }

        public static string DataRowToJson(DataRow dataRow)
        {
            var dict = new System.Collections.Generic.Dictionary<string, object>();
            foreach (DataColumn column in dataRow.Table.Columns)
            {
                dict[column.ColumnName] = dataRow[column];
            }

            return JsonConvert.SerializeObject(dict);
        }

        private void InsertTables(DataTable dt,string tipo)
        {
            try
            {

                foreach (DataRow row in dt.Rows)
                {
                    var codigo1 = string.Empty;
                   

                    var json = DataRowToJson(row);
                    var sinSegmento = 0;
                    var segmento = row["nombreTable"].ToString();
                    codigo1 = row["idCodMigracion"].ToString();
                    var nombreSP = "";
                    segmento = segmento.Substring(0, 2).Trim();

                    switch (segmento)
                    {

                        case "FA":
                            nombreSP = stringHandler.sp_RegistroMigracionFa;
                            break;

                        case "CB":
                            Console.WriteLine("CB");
                            break;

                        default:
                            sinSegmento = 1;
                            break;
                    }

                    if (sinSegmento == 1) {
                        continue;
                    }


                    SqlDataAdapter ad = new SqlDataAdapter();
                    DataSet ds = new DataSet();
                    SqlConnection Conexion = new SqlConnection(conexionDestino);
                    SqlCommand cmd = new SqlCommand();
                    Conexion.Open();
                    cmd.Connection = Conexion;
                    cmd.CommandText = nombreSP;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add(new SqlParameter("@accion", tipo));
                    cmd.Parameters.Add(new SqlParameter("@nombreTable", row["nombreTable"].ToString()));
                    cmd.Parameters.Add(new SqlParameter("@json", json));
                    ad = new SqlDataAdapter(cmd);
                    ad.Fill(ds);
                    Conexion.Close();

                    UpdateTableMigracion(codigo1, tipo, row["nombreTable"].ToString());
                }

            }
            catch (Exception ex)
            {

                throw new Exception(ex.Message.ToString());
            }
        }

        private DataSet consultar(string tipo,string accion)
        {
            DataTable dt = new DataTable();
            SqlDataAdapter ad = new SqlDataAdapter();
            DataSet ds = new DataSet();
            try
            {
                SqlConnection Conexion = new SqlConnection(conexionOrigen);
                SqlCommand cmd = new SqlCommand();
                Conexion.Open();
                cmd.Connection = Conexion;
                cmd.CommandText = stringHandler.sp_MigracionCodigo;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add(new SqlParameter("@accion", accion));
                cmd.Parameters.Add(new SqlParameter("@tipoU",tipo));
                ad = new SqlDataAdapter(cmd);
                ad.Fill(ds);
                Conexion.Close();
                return ds;
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message.ToString());
            }
        }

        private void UpdateTableMigracion(string codigo, string tipo, string nombreTabla)
        {
            try
            {
                DataTable dt = new DataTable();
                SqlDataAdapter ad = new SqlDataAdapter();
                DataSet ds = new DataSet();
                try
                {
                    SqlConnection Conexion = new SqlConnection(conexionOrigen);
                    SqlCommand cmd = new SqlCommand();
                    Conexion.Open();
                    cmd.Connection = Conexion;
                    cmd.CommandText = stringHandler.sp_MigracionCodigo;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add(new SqlParameter("@accion", stringHandler.accionModificaMigracion.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@codigoU", codigo.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@tipoU", tipo.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@nombreTableU", nombreTabla.Trim()));                   
                    ad = new SqlDataAdapter(cmd);
                    ad.Fill(ds);
                    Conexion.Close();
                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message.ToString());
                }
            }
            catch (Exception)
            {

                throw;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d3ccaf3431b242539c8b716f26511831.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_d3ccaf3431b242539c8b716f26511831</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_d3ccaf3431b242539c8b716f26511831</msb:DisplayName>
    <msb:ProjectId>{F5A4A457-109B-457E-84BC-6F00DC712344}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d3ccaf3431b242539c8b716f26511831.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Utils\stringHandler.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d3ccaf3431b242539c8b716f26511831")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d3ccaf3431b242539c8b716f26511831")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Utils\stringHandler.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace ST_d3ccaf3431b242539c8b716f26511831.Utils
{
    public static class stringHandler
    {
        internal static string sp_MigracionCodigo = "sp_MigracionCodigo";
        internal static string sp_RegistroMigracionFa = "sp_RegistroMigracionFa";
        internal static string accionCodigo1 = "1";
        internal static string accionCodigo2 = "2";
        internal static string accionCodigo3 = "3";
        internal static string accionRegistro = "I";
        internal static string accionModificaMigracion = "U";     
        internal static string DestinoUpdate = "U";     

    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d3ccaf3431b242539c8b716f26511831.dll">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
ZQlpCA4AswmvAAYAMwDEAAYAMQkoBQYAVwffCA4AewWvAAYAcgEoBQ4AXwGvAA4AZAZPCQYAcgYo
BQYANAUoBQYAvgJ+BwYAHQexBwYArQbPBRYAjgLTBBYA7wLTBBYAWgK6BQoAwQSYBBoAXwi5ARoA
aQG5AQYAaAQoBQ4A9gWvAA4APwKvAA4ACgavAB4AjgmPBg4ANgavAAYAogEoBQ4ASAdPCQ4ALgFP
CQ4AVwZ8Bg4AJAF8Bg4A5wGvAA4AHwZPCQ4AOwdPCQ4ASwd8BgYA7gEoBQYAfgEoBQYAxwnkBQAA
AABcAAAAAAABAAEAAQAQAHAFAQA5AAEAAQAAABAAuAcUCFEAAwALAAABEACLCBQIhQAFAA8AgQEQ
AC0HlAhRAAYAEgADAQAAEQkAAG0ADgATAAEA4wCtAAEAAwGtABEAOQVBAREAEwJFAREAOQFJARMA
uQatABMAjACtABMAJQCtABMAQACtABMATgCtABMAAAetABMAhgWtABMAgAKtAAYGhABNAVaAAQlQ
AVaA8wFQAVAgAAAAAIYIRQVEAAEAWCAAAAAAhghYBRAAAQBhIAAAAACGCNMGRAACAGkgAAAAAIYI
5wYQAAIAdCAAAAAAhgB2BQYAAwCkIgAAAACWAJ8GVAEDABwjAAAAAIEATghaAQQA9CQAAAAAgQAP
B2EBBgCoJQAAAACBAJ4FaAEIALAmAAAAAIYYcQcGAAsAuCYAAAAAgxhxBwYACwDAJgAAAACTCBkH
bwELAOwmAAAAAJMI+wF0AQsA8yYAAAAAkwgHAnkBCwD7JgAAAACWCEMJfwEMAAInAAAAAIYYcQcG
AAwACicAAAAAkRh3B4QBDAAYJwAAAACRGHcHhAEMAAAAAQBGBAAAAQBGBAAAAQC7CQAAAQA4CQAA
AgD7BgAAAQD7BgAAAgCzBQAAAQDMBgAAAgD7BgAAAwCjAAAAAQBGBAkAcQcBABEAcQcGABkAcQcK
ACkAcQcQADEAcQcQADkAcQcQAEEAcQcQAEkAcQcQAFEAcQcQAFkAcQcQAGEAcQcQAGkAcQcGAHkA
cQcGAOEAcQcGAAEBcQcVAHEACQktABEBWwgzABkBFgU5ACEBPARAAKEAZgREACkBLwVEAIEAQwhI
ADkBhAlOADEBFgVSAAwAcQcGAJEAVQFuAMEA0whzADkBYwd5AKkAeAlAALEAqgFEAJEAFgV+AAwA
HwWEAKkAmgmMALkAeAIGAEkBKAmQAMEAHwmnACkB3AmtAJEAFgWwACkBbwS1ACkB0Am7AFkB2QHB
AGEBcQcGAIEAcQcGAMkAcQcQAGkBcQcGAHEBawUGAGkBSAbGAHkBowkQAHkB4wHMAGkB8gjTAJEB
cQfZAIkB3wDfAGEBcQfoAJkBEQXvAHEBcgIGANEASQFEANEAcQcQAMEAcQcGAHEAcQcGAKEAcQcG
AKEBkAEFAaEBwwkOAekAcQcUAQkBcQcGAAgAPAA3AQgAQAA8ASAAawA8ASEAawA8AS4ACwCbAS4A
EwCkAS4AGwDDAS4AIwDMAS4AKwD1AS4AMwD1AS4AOwD1AS4AQwDMAS4ASwD7AS4AUwD1AS4AWwAS
AkAAawA8AUEAawA8AUMAYwA8AWAAawA8AWMAcwA8AWkAewDDAYAAawA8AYkAewDDAaEAawA8ARsA
WACVAPUA/gACAAEAAwADAAQABQAAAFwFiAEAAOsGiAEAAB0HjAEAABsCkQEAAEcJlgECAAEAAwAB
AAIAAwACAAMABQABAAQABQACAAwABwACAA0ACQABAA4ACQACAA8ACwBnAASAAAABAAAAdCP9owAA
AAAAAAEAAAAEAAAAAAAAAAAAAAAcAbsAAAAAABAAAAAAAAAAAAAAACUBeQQAAAAABAAAAAAAAAAA
AAAAHAGvAAAAAAAEAAAAAAAAAAAAAAAcAb4IAAAAAAQAAAAAAAAAAAAAABwBKAUAAAAAEAAAAAAA
AAAAAAAAJQFlAAAAAAANAAAAAAAAAAAAAAAuAY8GAAAAAAAAAAABAAAAwgcAAAYAAgAAAAAAAFNU
X2QzY2NhZjM0MzFiMjQyNTM5YzhiNzE2ZjI2NTExODMxAGFjY2lvbkNvZGlnbzEARGljdGlvbmFy
eWAyAGFjY2lvbkNvZGlnbzIAYWNjaW9uQ29kaWdvMwA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMAdmFsdWVfXwBzcF9SZWdpc3Ryb01pZ3JhY2lvbkZhAG5vbWJyZVRhYmxh
AFN5c3RlbS5EYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZAA8Y29u
ZXhpb25PcmlnZW4+a19fQmFja2luZ0ZpZWxkADxjb25leGlvbkRlc3Rpbm8+a19fQmFja2luZ0Zp
ZWxkAERiQ29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBnZXRf
VGFibGUARGF0YVRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAENvbnNvbGUAZ2V0X0NvbHVtbk5hbWUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBXcml0ZUxpbmUAc2V0X0NvbW1hbmRUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFz
ZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9z
ZQBEaXNwb3NlAERlc3Rpbm9VcGRhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdl
dF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN1YnN0cmlu
ZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
U1RfZDNjY2FmMzQzMWIyNDI1MzljOGI3MTZmMjY1MTE4MzEuZGxsAEZpbGwAZ2V0X0l0ZW0Ac2V0
X0l0ZW0AU3lzdGVtAFRyaW0ARW51bQByZXNvdXJjZU1hbgBnZXRfY29uZXhpb25PcmlnZW4Ac2V0
X2NvbmV4aW9uT3JpZ2VuAE9wZW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAGFjY2lvbk1vZGlmaWNh
TWlncmFjaW9uAFVwZGF0ZVRhYmxlTWlncmFjaW9uAGFjY2lvbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhVGFibGVDb2xsZWN0
aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGF0YVJvd0Nv
bGxlY3Rpb24Ac2V0X0Nvbm5lY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0
aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBOZXd0b25zb2Z0Lkpzb24ARGF0YVJvd1RvSnNvbgBDdWx0
dXJlSW5mbwBzcF9NaWdyYWNpb25Db2RpZ28AY29kaWdvAGdldF9jb25leGlvbkRlc3Rpbm8Ac2V0
X2NvbmV4aW9uRGVzdGlubwB0aXBvAGFjY2lvblJlZ2lzdHJvAGNvbnN1bHRhcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAHN0cmluZ0hhbmRsZXIAU3FsUGFyYW1ldGVyAFNxbERhdGFBZGFwdGVyAElFbnVt
ZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZDNjY2FmMzQz
MWIyNDI1MzljOGI3MTZmMjY1MTE4MzEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERl
YnVnZ2luZ01vZGVzAFNUX2QzY2NhZjM0MzFiMjQyNTM5YzhiNzE2ZjI2NTExODMxLlByb3BlcnRp
ZXMAZ2V0X1RhYmxlcwBJbnNlcnRUYWJsZXMAZ2V0X1ZhcmlhYmxlcwBTeXN0ZW0uV2luZG93cy5G
b3Jtcy5WaXN1YWxTdHlsZXMAU2V0dGluZ3MAU1RfZDNjY2FmMzQzMWIyNDI1MzljOGI3MTZmMjY1
MTE4MzEuVXRpbHMAU3lzdGVtLldpbmRvd3MuRm9ybXMAZ2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxl
Y3Rpb25zAGdldF9QYXJhbWV0ZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9S
b3dzAFNlcmlhbGl6ZU9iamVjdABkdABEYXRhU2V0AGdldF9EZWZhdWx0AFN5c3RlbS5EYXRhLlNx
bENsaWVudABWaXN1YWxTdHlsZUVsZW1lbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvdW50AEpzb25Db252
ZXJ0AE1vdmVOZXh0AHNldF9Db21tYW5kVGV4dABEYXRhUm93AGRhdGFSb3cAZ2V0X0Fzc2VtYmx5
AG9wX0VxdWFsaXR5AEVtcHR5AAAAAClVAHMAZQByADoAOgBjAG8AbgBlAHgAaQBvAG4ATwByAGkA
ZwBlAG4AACtVAHMAZQByADoAOgBjAG8AbgBlAHgAaQBvAG4ARABlAHMAdABpAG4AbwAAF24AbwBt
AGIAcgBlAFQAYQBiAGwAZQAAHWkAZABDAG8AZABNAGkAZwByAGEAYwBpAG8AbgAAAQAFRgBBAAAF
QwBCAAAPQABhAGMAYwBpAG8AbgAAGUAAbgBvAG0AYgByAGUAVABhAGIAbABlAAALQABqAHMAbwBu
AAANQAB0AGkAcABvAFUAABFAAGMAbwBkAGkAZwBvAFUAABtAAG4AbwBtAGIAcgBlAFQAYQBiAGwA
ZQBVAABxUwBUAF8AZAAzAGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2
AGYAMgA2ADUAMQAxADgAMwAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAlcwBwAF8ATQBpAGcAcgBhAGMAaQBvAG4AQwBvAGQAaQBnAG8AAC1zAHAAXwBSAGUAZwBp
AHMAdAByAG8ATQBpAGcAcgBhAGMAaQBvAG4ARgBhAAADMQAAAzIAAAMzAAADSQAAA1UAAAAoJ15O
X/WMTp1svLO4g2m4AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF9EQcKEkESQRJBEkESQQgICAgI
BSAAEoCJBSAAEoCNBiABEoCRHAMgABwDIAAOBSAAEoCZAyAACAUgARJhCA4HBBUSTQIOHBJVElkS
XQYVEk0CDhwEIAASYQUgABKAoQQgABJVBSABHBJZByACARMAEwEDIAACBAABDhwRBwoSVRJJDg4I
Dg4SQRJlEl0FIAASgKkCBg4EIAEcDgUgAg4ICAUAAgIODgQAAQEOBSABARJlBiABARGAwQUgABKA
xQUgAgEOHAggARKAyRKAyQYgAQESgLUFIAEIEkEIBwMSQRJlEkEGBwISQRJlCAABEoDREYDVBSAA
EoDZByACAQ4SgNkIt3pcVhk04IkIiYRdzYCAzJEIMK1P5rKmru0EAAAAAAQBAAAAAwYSdQMGEnkD
BhIQAgYIAwYRGAUAAQ4SSQYgAgESYQ4GIAISQQ4OBiADAQ4ODgQAABJ1BAAAEnkFAAEBEnkEAAAS
EAMAAAEDKAAOBAgAEnUECAASeQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTVF9kM2NjYWYzNDMxYjI0MjUzOWM4YjcxNmYyNjUxMTgzMQAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuN7QAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AADIPQAAAAAAAAAAAADiPQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1D0AAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAP2jdCMAAAEA/aN0Iz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AZAAzAGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYAMgA2ADUA
MQAxADgAMwAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkAMAA3
ADYALgA0ADEAOQA4ADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
ZAAzAGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYAMgA2ADUAMQAx
ADgAMwAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwBkADMAYwBjAGEAZgAzADQAMwAxAGIAMgA0ADIANQAzADkAYwA4AGIANwAxADYAZgAy
ADYANQAxADEAOAAzADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AZAAzAGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYAMgA2
ADUAMQAxADgAMwAxAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA5ADAANwA2AC4ANAAxADkAOAAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA5ADAANwA2AC4ANAAxADkAOAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPQ9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="193,42"
          Id="Package\Transferencia de Datos"
          TopLeft="312,155" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>