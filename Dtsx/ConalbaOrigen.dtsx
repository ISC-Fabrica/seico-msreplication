<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/28/2024 11:54:16 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-PJEIDUL"
  DTS:CreatorName="DESKTOP-PJEIDUL\Leonardo Mancero"
  DTS:DTSID="{C5ECAD1F-485A-43D3-AC9F-8B7580C2D69F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="12298"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="243"
  DTS:VersionGUID="{687D8F0D-6A94-4042-AC26-EED84CA35844}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SEICOII destino]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{948782EB-C079-4FA0-AF5C-E26CA168D8D1}"
      DTS:ObjectName="SEICOII destino">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=192.168.1.100;User ID=integrity;Initial Catalog=SEICOIIDEV;Provider=SQLOLEDB.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package1-{948782EB-C079-4FA0-AF5C-E26CA168D8D1}192.168.1.100.SEICOIIDEV.integrity;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA0XX2T+mKzE+PgU5eSR56MgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACB/5dlmcsJAdzDMDK9jr5sw07e6JNotRr9hfHH90UowwAAAAAOgAAAAAIAACAAAAAdEKRfD0hcuu2f5GIuIUuplT0lD5UOI3+J3QmV9EbcSiAAAADzCbPSNGrsfodREr+8COn/MbNaadNCaRoH1L0H5gntiUAAAAAvDmr3bK51AfTMlMdU0QIcV9VZMTm6ETB4uB/LH1PgzXZhd6qTfSMgV4QDwZrnlzpQ1eMQ7N3nTqxQKAvCns8Q</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9CF8257D-49E9-4E9F-B1B0-3E17020424A8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="codigo">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{509C2FF5-DC99-4766-BECB-52ACEAEB6024}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="codigo2">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D6F3B506-F5FD-4BBE-8C52-6E72F49F8F54}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="codigo3">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0EA38780-1149-4A1C-AD66-BC5CB0ECB829}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="codigo4">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{305263BD-1D7A-4882-A3AB-3AA556A00D1A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="codigo5">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{93EB8763-83D6-4614-9DCA-0E7F200B9B6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="conexionDestino">
      <DTS:VariableValue
        DTS:DataType="8">Server=192.168.1.100;Database=SEICOIIDEV;User Id=Integrity;Password=conalBa0608;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5970596-9505-45EA-A6AF-2E6F85FD6866}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="conexionOrigen">
      <DTS:VariableValue
        DTS:DataType="8">Server=192.168.1.100;Database=SEICOII;User Id=Integrity;Password=conalBa0608;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4D69A5DE-4A80-488F-A2D0-369BC2553A25}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dtConsultaRegistrosMIgrados">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{988AEDC8-4ABC-4A23-B36F-CC51B62C462E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="dtConsultaRegistrosMigrados2">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Secuencia 1"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{97ED8759-2846-40FD-A37A-580BDD24CE83}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Secuencia 1">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Secuencia 1\Transferencia de Datos"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{5BAAEFA1-60F3-4DE3-9FB3-AA7AE45CDE73}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Transferencia de Datos"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_d3ccaf3431b242539c8b716f26511831"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::conexionDestino,User::conexionOrigen">
              <ProjectItem
                Name="Models\Request.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_d3ccaf3431b242539c8b716f26511831.Models
{
    public class Request
    {
        public string tabla { get; set; }
        public List<string> columnas { get; set; }
        public List<object> valor { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_d3ccaf3431b242539c8b716f26511831.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6DEBB0CA-D366-45DF-807B-F7B6E42E2F10}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d3ccaf3431b242539c8b716f26511831</RootNamespace>
    <AssemblyName>ST_d3ccaf3431b242539c8b716f26511831</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\isc_2\AppData\Local\Temp\Vsta\SSIS_ST160\VstaHuJIOF4T5UqSqx7HMqY__w\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Models\Request.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Utils\stringHandler.cs" />
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Entidades\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="packages.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net47" />
</packages>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Settings.get_Default():ST_d3ccaf3431b242539c8b716f26511831.Properties.Sett" +
    "ings")]

namespace ST_d3ccaf3431b242539c8b716f26511831.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;
using ST_d3ccaf3431b242539c8b716f26511831.Utils;
using Newtonsoft.Json;
using System.Collections;
using ST_d3ccaf3431b242539c8b716f26511831.Models;
using System.Collections.Generic;
using Newtonsoft.Json.Linq;
using System.Linq;
using static System.Net.Mime.MediaTypeNames;
#endregion

namespace ST_d3ccaf3431b242539c8b716f26511831
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        public string conexionOrigen { get; set; }
        public string conexionDestino { get; set; }

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            conexionOrigen = Dts.Variables["User::conexionOrigen"].Value.ToString();
            conexionDestino = Dts.Variables["User::conexionDestino"].Value.ToString();

            #region CODIGO1
            var consulta = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo1);
            if (consulta.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta.Tables.Count; i++)
                {
                    //InsertTables(consulta.Tables[i], stringHandler.accionRegistro.Trim());
                    InsertTablesV2000(consulta.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta = null;


            var consultaUp = consultarRegistros(stringHandler.accionTipo, stringHandler.accionCodigo1, stringHandler.DestinoUpdate);
            if (consultaUp.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consultaUp.Tables.Count; i++)
                {
                    UpdateTablesV2000(consultaUp.Tables[i], stringHandler.DestinoUpdate, stringHandler.accionCodigo1);
                }
            }

            consultaUp = null;
            #endregion
            #region CODIGO2
            var consulta2 = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo2);
            if (consulta2.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta2.Tables.Count; i++)
                {
                    InsertTablesV2000(consulta2.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta2 = null;

            var consultaUp2 = consultarRegistros(stringHandler.accionTipo, stringHandler.accionCodigo2, stringHandler.DestinoUpdate);
            if (consultaUp2.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consultaUp2.Tables.Count; i++)
                {
                    UpdateTablesV2000(consultaUp2.Tables[i], stringHandler.DestinoUpdate, stringHandler.accionCodigo2);                   
                }
            }
            consultaUp2 = null;
            #endregion
            #region CODIGO3
            var consulta3 = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo3);
            if (consulta3.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta3.Tables.Count; i++)
                {
                    InsertTablesV2000(consulta3.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta3 = null;

            var consultaUp3 = consultarRegistros(stringHandler.accionTipo, stringHandler.accionCodigo3, stringHandler.DestinoUpdate);
            if (consultaUp3.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consultaUp3.Tables.Count; i++)
                {
                    UpdateTablesV2000(consultaUp3.Tables[i], stringHandler.DestinoUpdate, stringHandler.accionCodigo3);
                }
            }
            consultaUp3 = null;

            #endregion
            #region CODIGO4
            var consulta4 = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo4);
            if (consulta4.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta4.Tables.Count; i++)
                {
                    InsertTablesV2000(consulta4.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta4 = null;

            var consultaUp4 = consultarRegistros(stringHandler.accionTipo, stringHandler.accionCodigo4, stringHandler.DestinoUpdate);
            if (consultaUp4.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consultaUp4.Tables.Count; i++)
                {
                    UpdateTablesV2000(consultaUp4.Tables[i], stringHandler.DestinoUpdate, stringHandler.accionCodigo4);
                }
            }
            consultaUp4 = null;

            #endregion
            #region CODIGO5
            var consulta5 = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo5);
            if (consulta5.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta5.Tables.Count; i++)
                {
                    InsertTablesV2000(consulta5.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta5 = null;

            var consultaUp5 = consultarRegistros(stringHandler.accionTipo, stringHandler.accionCodigo5, stringHandler.DestinoUpdate);
            if (consultaUp5.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consultaUp5.Tables.Count; i++)
                {
                    UpdateTablesV2000(consultaUp5.Tables[i], stringHandler.DestinoUpdate, stringHandler.accionCodigo5);
                }
            }
            consultaUp5 = null;
            #endregion
        }

        public static string DataRowToJson(DataRow dataRow)
        {
            var dict = new System.Collections.Generic.Dictionary<string, object>();
            foreach (DataColumn column in dataRow.Table.Columns)
            {
                dict[column.ColumnName] = dataRow[column];
            }

            return JsonConvert.SerializeObject(dict);
        }

        private void InsertTables(DataTable dt, string tipo)
        {
            try
            {
                if (dt.Rows.Count > 0)
                {
                    var jsonText = string.Empty;
                    List<Request> datosResponse = new List<Request>();

                    foreach (DataRow row in dt.Rows)
                    {
                        jsonText += row[0].ToString();
                    }

                    JArray jsonObject = JArray.Parse(jsonText);
                    var tabla = jsonObject[0];
                    var nombreTable = string.Empty;
                    nombreTable = tabla["tabla"].ToString();
                    nombreTable = nombreTable + "_PRUEBA";
                    var ArrayList = JArray.Parse(tabla["datos"].ToString());


                    foreach (var item in ArrayList)
                    {
                        var jsonSerializado = JsonConvert.SerializeObject(item);

                        var sinSegmento = 0;
                        string segmento = nombreTable.ToString();
                        var nombreSP = "";
                        segmento = segmento.Substring(0, 2).Trim();

                        switch (segmento)
                        {
                            case "FA":
                                nombreSP = stringHandler.sp_RegistroMigracionFa;
                                break;
                            case "CB":
                                Console.WriteLine("CB");
                                break;

                            default:
                                sinSegmento = 1;
                                break;
                        }

                        if (sinSegmento == 1)
                        {
                            continue;
                        }

                        SqlDataAdapter ad = new SqlDataAdapter();
                        DataSet ds = new DataSet();
                        SqlConnection Conexion = new SqlConnection(conexionDestino);
                        SqlCommand cmd = new SqlCommand();
                        Conexion.Open();
                        cmd.Connection = Conexion;
                        cmd.CommandText = nombreSP;
                        cmd.CommandType = CommandType.StoredProcedure;
                        cmd.Parameters.Add(new SqlParameter("@accion", tipo));
                        cmd.Parameters.Add(new SqlParameter("@nombreTable", nombreTable));
                        cmd.Parameters.Add(new SqlParameter("@json", jsonSerializado));
                        ad = new SqlDataAdapter(cmd);
                        ad.Fill(ds);
                        Conexion.Close();
                    }

                }

            }
            catch (Exception ex)
            {

                throw new Exception(ex.Message.ToString());
            }
        }


        private void InsertTablesV2000(DataTable dt, string accion)
        {
            try
            {
                if (dt.Rows.Count > 0)
                {
                    var jsonText = string.Empty;
                    List<Request> datosResponse = new List<Request>();

                    foreach (DataRow row in dt.Rows)
                    {
                        jsonText += row[0].ToString();
                    }

                    JArray jsonObject = JArray.Parse(jsonText);
                    var tabla = jsonObject[0];
                    var nombreTable = string.Empty;
                    //var nombreTableI = string.Empty;
                    nombreTable = tabla["tabla"].ToString();
                    //nombreTableI = nombreTable + "_PRUEBA";
                    var ArrayList = JArray.Parse(tabla["datos"].ToString());



                    foreach (var item in ArrayList)
                    {
                        string columnas = string.Empty;
                        string valor = string.Empty;

                        var jsonSerializado = JsonConvert.SerializeObject(item);
                        var des = JsonConvert.DeserializeObject<Dictionary<string, string>>(jsonSerializado);
                        foreach (var item1 in des.Keys)
                        {
                            columnas += $"{item1},";
                        }


                        foreach (var item2 in des.Values)
                        {
                            valor += $"'{item2}',";

                        }

                        var sinSegmento = 0;
                        string segmento = nombreTable.ToString();
                        var nombreSP = "";
                        segmento = segmento.Substring(0, 2).Trim();


                        nombreSP = stringHandler.sp_RegistroMigraOldFa;

                        //switch (segmento)
                        //{
                        //    case "FA":
                        //        nombreSP = stringHandler.sp_RegistroMigraOldFa;
                        //        break;
                        //    case "CB":
                        //        Console.WriteLine("CB");
                        //        break;

                        //    default:
                        //        sinSegmento = 1;
                        //        break;
                        //}

                        //if (sinSegmento == 1)
                        //{
                        //    continue;
                        //}


                        SqlDataAdapter ad = new SqlDataAdapter();
                        DataSet ds = new DataSet();
                        SqlConnection Conexion = new SqlConnection(conexionDestino);
                        SqlCommand cmd = new SqlCommand();
                        Conexion.Open();
                        cmd.Connection = Conexion;
                        cmd.CommandText = nombreSP;
                        cmd.CommandType = CommandType.StoredProcedure;
                        cmd.Parameters.Add(new SqlParameter("@accion", accion));
                        cmd.Parameters.Add(new SqlParameter("@nombreTable", nombreTable));
                        cmd.Parameters.Add(new SqlParameter("@columnas", columnas.Remove(columnas.Length - 1)));
                        cmd.Parameters.Add(new SqlParameter("@valores", valor.Remove(valor.Length - 1)));
                        ad = new SqlDataAdapter(cmd);
                        ad.Fill(ds);
                        Conexion.Close();
                    }

                    UpdateTableMigracion(accion, nombreTable);
                }

            }
            catch (Exception ex)
            {

                throw new Exception(ex.Message.ToString());
            }

        }

        private void UpdateTablesV2000(DataTable dt, string accion, string codigoTipo)
        {

            try
            {
                if (dt.Rows.Count > 0)
                {
                    var jsonText = string.Empty;
                    List<Request> datosResponse = new List<Request>();

                    foreach (DataRow row in dt.Rows)
                    {
                        jsonText += row[0].ToString();
                    }

                    JArray jsonObject = JArray.Parse(jsonText);
                    var tabla = jsonObject[0];
                    var nombreTable = string.Empty;
                    var nombreTableI = string.Empty;
                    nombreTable = tabla["tabla"].ToString();
                    nombreTableI = nombreTable + "_PRUEBA";
                    var ArrayList = JArray.Parse(tabla["datos"].ToString());
                    var ArrayListFiltros = JArray.Parse(tabla["filtros"].ToString());

                    var seri = JsonConvert.SerializeObject(ArrayList);

                    int cont = 0;
                    foreach (var filtro in ArrayListFiltros)
                    {
                        var item = ArrayList[cont];  
                        

                        int sinSegmento = 0;
                        string segmento = nombreTable.ToString();
                        string nombreSP = string.Empty;
                        segmento = segmento.Substring(0, 2).Trim();
                        nombreSP = stringHandler.sp_RegistroMigraOldFa;

                        //switch (segmento)
                        //{
                        //    case "FA":
                        //        nombreSP = stringHandler.sp_RegistroMigraOldFa;
                        //        break;
                        //    case "CB":
                        //        Console.WriteLine("CB");
                        //        break;

                        //    default:
                        //        sinSegmento = 1;
                        //        break;
                        //}

                        //if (sinSegmento == 1)
                        //{
                        //    continue;
                        //}


                        SqlDataAdapter ad = new SqlDataAdapter();
                        DataSet ds = new DataSet();
                        SqlConnection Conexion = new SqlConnection(conexionDestino);
                        SqlCommand cmd = new SqlCommand();
                        Conexion.Open();
                        cmd.Connection = Conexion;
                        cmd.CommandText = nombreSP;
                        cmd.CommandType = CommandType.StoredProcedure;
                        cmd.Parameters.Add(new SqlParameter("@accion", accion));
                        cmd.Parameters.Add(new SqlParameter("@nombreTable", nombreTable));
                        cmd.Parameters.Add(new SqlParameter("@columnas", item.ToString()));
                        cmd.Parameters.Add(new SqlParameter("@valores", filtro.ToString()));
                        ad = new SqlDataAdapter(cmd);
                        ad.Fill(ds);
                        Conexion.Close();
                        cont++;
                    }
                    UpdateTableMigracion(accion, nombreTable);
                }

            }
            catch (Exception ex)
            {

                throw new Exception(ex.Message.ToString());
            }



            #region OLD
            //try
            //{
            //    //if (dt.Rows.Count > 0)
            //    //{
            //    //    var jsonText = string.Empty;
            //    //    List<Request> datosResponse = new List<Request>();

            //    //    foreach (DataRow row in dt.Rows)
            //    //    {
            //    //        jsonText += row[0].ToString();
            //    //    }

            //    //    JArray jsonObject = JArray.Parse(jsonText);
            //    //    var tabla = jsonObject[0];
            //    //    var nombreTable = string.Empty;
            //    //    nombreTable = tabla["tabla"].ToString();
            //    //    nombreTable = nombreTable + "_PRUEBA";
            //    //    var ArrayList = JArray.Parse(tabla["datos"].ToString());


            //    //    var dtR = consultarRegistros(accion, codigoTipo);
            //    //    string[] valorSplit = { };
            //    //    foreach (DataRow itemR in dtR.Tables[0].Rows)
            //    //    {
            //    //        var obs = itemR["observacion"].ToString();
            //    //        valorSplit = obs.Split(',');
            //    //    }


            //    //    foreach (var item in ArrayList)
            //    //    {
            //    //        string columnas = string.Empty;
            //    //        string valor = string.Empty;

            //    //        var jsonSerializado = JsonConvert.SerializeObject(item);

            //    //        foreach (string itemSplit in valorSplit)
            //    //        {
            //    //            JObject jsonObj = JObject.Parse(jsonSerializado);
            //    //            jsonObj.Remove(itemSplit.ToString());

            //    //        }

            //    //        //var des = JsonConvert.DeserializeObject<Dictionary<string, string>>(jsonSerializado);
            //    //        //        foreach (var item1 in des.Keys)
            //    //        //        {
            //    //        //            columnas += $"{item1},";
            //    //        //        }


            //    //        //        foreach (var item2 in des.Values)
            //    //        //        {
            //    //        //            valor += $"'{item2}',";

            //    //        //        }

            //    //        //        var sinSegmento = 0;
            //    //        //        string segmento = nombreTable.ToString();
            //    //        //        var nombreSP = "";
            //    //        //        segmento = segmento.Substring(0, 2).Trim();

            //    //        //        switch (segmento)
            //    //        //        {
            //    //        //            case "FA":
            //    //        //                nombreSP = stringHandler.sp_RegistroMigraOldFa;
            //    //        //                break;
            //    //        //            case "CB":
            //    //        //                Console.WriteLine("CB");
            //    //        //                break;

            //    //        //            default:
            //    //        //                sinSegmento = 1;
            //    //        //                break;
            //    //        //        }

            //    //        //        if (sinSegmento == 1)
            //    //        //        {
            //    //        //            continue;
            //    //        //        }


            //    //        //        SqlDataAdapter ad = new SqlDataAdapter();
            //    //        //        DataSet ds = new DataSet();
            //    //        //        SqlConnection Conexion = new SqlConnection(conexionDestino);
            //    //        //        SqlCommand cmd = new SqlCommand();
            //    //        //        Conexion.Open();
            //    //        //        cmd.Connection = Conexion;
            //    //        //        cmd.CommandText = nombreSP;
            //    //        //        cmd.CommandType = CommandType.StoredProcedure;
            //    //        //        cmd.Parameters.Add(new SqlParameter("@accion", accion));
            //    //        //        cmd.Parameters.Add(new SqlParameter("@nombreTable", nombreTable));
            //    //        //        cmd.Parameters.Add(new SqlParameter("@valores", valor.Remove(valor.Length - 1)));
            //    //        //        ad = new SqlDataAdapter(cmd);
            //    //        //        ad.Fill(ds);
            //    //        //        Conexion.Close();
            //    //    }


            //    //}

            //}
            //catch (Exception ex)
            //{

            //    throw new Exception(ex.Message.ToString());
            //}

            #endregion OLD
        }


        private DataSet consultar(string tipo, string accion)
        {
            DataTable dt = new DataTable();
            SqlDataAdapter ad = new SqlDataAdapter();
            DataSet ds = new DataSet();
            try
            {
                SqlConnection Conexion = new SqlConnection(conexionOrigen);
                SqlCommand cmd = new SqlCommand();
                Conexion.Open();
                cmd.Connection = Conexion;
                cmd.CommandText = stringHandler.sp_MigracionCodigo;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add(new SqlParameter("@accion", accion));
                cmd.Parameters.Add(new SqlParameter("@tipoU", tipo));
                ad = new SqlDataAdapter(cmd);
                ad.Fill(ds);
                Conexion.Close();
                return ds;
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message.ToString());
            }
        }

        private DataSet consultarRegistros(string accion, string codigoTipo, string tipo)
        {
            DataTable dt = new DataTable();
            SqlDataAdapter ad = new SqlDataAdapter();
            DataSet ds = new DataSet();

            try
            {
                SqlConnection Conexion = new SqlConnection(conexionOrigen);
                SqlCommand cmd = new SqlCommand();
                Conexion.Open();
                cmd.Connection = Conexion;
                cmd.CommandText = stringHandler.sp_MigracionCodigo;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add(new SqlParameter("@accion", accion));
                cmd.Parameters.Add(new SqlParameter("@codigoTipo", codigoTipo));
                cmd.Parameters.Add(new SqlParameter("@tipoU", tipo));
                ad = new SqlDataAdapter(cmd);
                ad.Fill(ds);
                Conexion.Close();
                return ds;
            }
            catch (Exception ex)
            {

                throw new Exception(ex.Message.ToString());
            }
        }

        private void UpdateTableMigracion( string tipo, string nombreTabla)
        {
            try
            {
                DataTable dt = new DataTable();
                SqlDataAdapter ad = new SqlDataAdapter();
                DataSet ds = new DataSet();
                try
                {
                    SqlConnection Conexion = new SqlConnection(conexionOrigen);
                    SqlCommand cmd = new SqlCommand();
                    Conexion.Open();
                    cmd.Connection = Conexion;
                    cmd.CommandText = stringHandler.sp_MigracionCodigo;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add(new SqlParameter("@accion", stringHandler.accionModificaMigracion.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@tipoU", tipo.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@nombreTableU", nombreTabla.Trim()));
                    ad = new SqlDataAdapter(cmd);
                    ad.Fill(ds);
                    Conexion.Close();
                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message.ToString());
                }
            }
            catch (Exception)
            {

                throw;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d3ccaf3431b242539c8b716f26511831.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_d3ccaf3431b242539c8b716f26511831</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_d3ccaf3431b242539c8b716f26511831</msb:DisplayName>
    <msb:ProjectId>{C2FFAC1F-E0D3-438B-A07A-3A2CDD59AD6A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d3ccaf3431b242539c8b716f26511831.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Models\Request.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Utils\stringHandler.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d3ccaf3431b242539c8b716f26511831")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d3ccaf3431b242539c8b716f26511831")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Utils\stringHandler.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace ST_d3ccaf3431b242539c8b716f26511831.Utils
{
    public static class stringHandler
    {
        internal static string sp_MigracionCodigo = "sp_MigracionCodigo";
        internal static string sp_RegistroMigracionFa = "sp_RegistroMigracionFa";
        internal static string sp_RegistroMigraOldFa = "sp_RegistroMigraOldFa";
        internal static string accionCodigo1 = "1";
        internal static string accionCodigo2 = "2";
        internal static string accionCodigo3 = "3";
        internal static string accionCodigo4 = "4";
        internal static string accionCodigo5 = "5";
        internal static string accionRegistro = "I";
        internal static string accionModificaMigracion = "U";     
        internal static string DestinoUpdate = "U";     
        internal static string accionTipo = "UC";     

    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_d3ccaf3431b242539c8b716f26511831.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAILuNGcAAAAAAAAAAOAAIiALATAAAC4AAAAIAAAAAAAAwkwA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHBMAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAyCwAAAAgAAAALgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAwAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACk
TAAAAAAAAEgAAAACAAUANDAAAIQbAAABAAAAAAAAALhLAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCoA
ABMwBAALBAAAAQAAEQICKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKAIAAAYCAigQAAAK
bxEAAApyKwAAcG8SAAAKbxMAAApvFAAACigEAAAGAn4OAAAEbxUAAAp+CQAABCgKAAAGCgZvFgAA
Cm8XAAAKFjE3FhMKKyMCBm8WAAAKEQpvGAAACn4OAAAEbxUAAAooCAAABhEKF1gTChEKBm8WAAAK
bxcAAAoyzhQKAn4RAAAEfgkAAAR+EAAABCgLAAAGCwdvFgAACm8XAAAKFjE3FhMLKyMCB28WAAAK
EQtvGAAACn4QAAAEfgkAAAQoCQAABhELF1gTCxELB28WAAAKbxcAAAoyzhQLAn4OAAAEbxUAAAp+
CgAABCgKAAAGDAhvFgAACm8XAAAKFjE3FhMMKyMCCG8WAAAKEQxvGAAACn4OAAAEbxUAAAooCAAA
BhEMF1gTDBEMCG8WAAAKbxcAAAoyzhQMAn4RAAAEfgoAAAR+EAAABCgLAAAGDQlvFgAACm8XAAAK
FjE3FhMNKyMCCW8WAAAKEQ1vGAAACn4QAAAEfgoAAAQoCQAABhENF1gTDRENCW8WAAAKbxcAAAoy
zhQNAn4OAAAEbxUAAAp+CwAABCgKAAAGEwQRBG8WAAAKbxcAAAoWMTkWEw4rJAIRBG8WAAAKEQ5v
GAAACn4OAAAEbxUAAAooCAAABhEOF1gTDhEOEQRvFgAACm8XAAAKMswUEwQCfhEAAAR+CwAABH4Q
AAAEKAsAAAYTBREFbxYAAApvFwAAChYxORYTDyskAhEFbxYAAAoRD28YAAAKfhAAAAR+CwAABCgJ
AAAGEQ8XWBMPEQ8RBW8WAAAKbxcAAAoyzBQTBQJ+DgAABG8VAAAKfgwAAAQoCgAABhMGEQZvFgAA
Cm8XAAAKFjE5FhMQKyQCEQZvFgAAChEQbxgAAAp+DgAABG8VAAAKKAgAAAYREBdYExAREBEGbxYA
AApvFwAACjLMFBMGAn4RAAAEfgwAAAR+EAAABCgLAAAGEwcRB28WAAAKbxcAAAoWMTkWExErJAIR
B28WAAAKERFvGAAACn4QAAAEfgwAAAQoCQAABhERF1gTEREREQdvFgAACm8XAAAKMswUEwcCfg4A
AARvFQAACn4NAAAEKAoAAAYTCBEIbxYAAApvFwAAChYxORYTEiskAhEIbxYAAAoREm8YAAAKfg4A
AARvFQAACigIAAAGERIXWBMSERIRCG8WAAAKbxcAAAoyzBQTCAJ+EQAABH4NAAAEfhAAAAQoCwAA
BhMJEQlvFgAACm8XAAAKFjE5FhMTKyQCEQlvFgAAChETbxgAAAp+EAAABH4NAAAEKAkAAAYRExdY
ExMRExEJbxYAAApvFwAACjLMFBMJKgAbMAQAWgAAAAIAABFzGQAACgoCbxoAAApvGwAACm8cAAAK
CysfB28dAAAKdBcAAAEMBghvHgAACgIIbx8AAApvIAAACgdvIQAACi3Z3hEHdRgAAAENCSwGCW8i
AAAK3AYoIwAACioAAAEQAAACABcAK0IAEQAAAAAbMAQA6QEAAAMAABEDbyQAAApvFwAAChY+xQEA
AH4lAAAKCnMmAAAKJgNvJAAACm8cAAAKDCsfCG8dAAAKdBMAAAENBgkWbycAAApvFAAACigoAAAK
CghvIQAACi3Z3hQIdRgAAAETBBEELAcRBG8iAAAK3AYoKQAAChZvKgAACn4lAAAKCyVyVwAAcG8r
AAAKbxQAAAoLB3JjAABwKCgAAAoLcnMAAHBvKwAACm8UAAAKKCkAAApvLAAAChMFOAUBAAARBW8t
AAAKKCMAAAoTBhYTBwdvFAAAChMIcn8AAHATCREIFhhvLgAACm8VAAAKEwgRCHKBAABwKC8AAAot
EBEIcocAAHAoLwAACi0LKxV+BwAABBMJKw9yhwAAcCgwAAAKKwMXEwcRBxc7lwAAAHMxAAAKJnMy
AAAKEwoCKAMAAAZzMwAAChMLczQAAAoRC281AAAKJRELbzYAAAolEQlvNwAACiUabzgAAAolbzkA
AApyjQAAcARzOgAACm87AAAKJiVvOQAACnKdAABwB3M6AAAKbzsAAAomJW85AAAKcrcAAHARBnM6
AAAKbzsAAAomczwAAAoRCm89AAAKJhELbz4AAAoRBW8hAAAKOu/+///eDBEFLAcRBW8iAAAK3N4Q
bz8AAApvFAAACnNAAAAKeioAAABBTAAAAgAAACkAAAArAAAAVAAAABQAAAAAAAAAAgAAALIAAAAY
AQAAygEAAAwAAAAAAAAAAAAAAAAAAADYAQAA2AEAABAAAAAdAAABGzAGAHYCAAAEAAARA28kAAAK
bxcAAAoWPlICAAB+JQAACgpzJgAACiYDbyQAAApvHAAACgwrHwhvHQAACnQTAAABDQYJFm8nAAAK
bxQAAAooKAAACgoIbyEAAAot2d4UCHUYAAABEwQRBCwHEQRvIgAACtwGKCkAAAoWbyoAAAp+JQAA
CgslclcAAHBvKwAACm8UAAAKC3JzAABwbysAAApvFAAACigpAAAKbywAAAoTBTiWAQAAEQVvLQAA
Cn4lAAAKEwZ+JQAAChMHKCMAAAooAQAAKxMIEQhvQgAACm9DAAAKEwwrGRIMKEQAAAoTDREGEQ1y
wwAAcChFAAAKEwYSDChGAAAKLd7eDhIM/hYGAAAbbyIAAArcEQhvRwAACm9IAAAKEw4rHhIOKEkA
AAoTDxEHcscAAHARD3LLAABwKEoAAAoTBxIOKEsAAAot2d4OEg7+FggAABtvIgAACtwHbxQAAApy
fwAAcBMJFhhvLgAACm8VAAAKJn4IAAAEEwlzMQAACiZzMgAAChMKAigDAAAGczMAAAoTC3M0AAAK
EQtvNQAACiURC282AAAKJREJbzcAAAolGm84AAAKJW85AAAKco0AAHAEczoAAApvOwAACiYlbzkA
AApynQAAcAdzOgAACm87AAAKJiVvOQAACnLRAABwEQYRBm9MAAAKF1lvTQAACnM6AAAKbzsAAAom
JW85AAAKcuUAAHARBxEHb0wAAAoXWW9NAAAKczoAAApvOwAACiZzPAAAChEKbz0AAAomEQtvPgAA
ChEFbyEAAAo6Xv7//94MEQUsBxEFbyIAAArcAgQHKAwAAAbeEG8/AAAKbxQAAApzQAAACnoqAABB
fAAAAgAAACkAAAArAAAAVAAAABQAAAAAAAAAAgAAANoAAAAmAAAAAAEAAA4AAAAAAAAAAgAAABwB
AAArAAAARwEAAA4AAAAAAAAAAgAAAKYAAACpAQAATwIAAAwAAAAAAAAAAAAAAAAAAABlAgAAZQIA
ABAAAAAdAAABGzAEAAcCAAAFAAARA28kAAAKbxcAAAoWPuMBAAB+JQAACgpzJgAACiYDbyQAAApv
HAAAChMEKyIRBG8dAAAKdBMAAAETBQYRBRZvJwAACm8UAAAKKCgAAAoKEQRvIQAACi3V3hURBHUY
AAABEwYRBiwHEQZvIgAACtwGKCkAAAoWbyoAAAp+JQAACgt+JQAACiYlclcAAHBvKwAACm8UAAAK
CwdyYwAAcCgoAAAKJiVycwAAcG8rAAAKbxQAAAooKQAACgxy9wAAcG8rAAAKbxQAAAooKQAACggo
IwAACiYWDW8sAAAKEwc48AAAABEHby0AAAoTCAgJbyoAAAoTCQdvFAAACn4lAAAKEwoWGG8uAAAK
bxUAAAomfggAAAQTCnMxAAAKJnMyAAAKEwsCKAMAAAZzMwAAChMMczQAAAoRDG81AAAKJREMbzYA
AAolEQpvNwAACiUabzgAAAolbzkAAApyjQAAcARzOgAACm87AAAKJiVvOQAACnKdAABwB3M6AAAK
bzsAAAomJW85AAAKctEAAHARCW8UAAAKczoAAApvOwAACiYlbzkAAApy5QAAcBEIbxQAAApzOgAA
Cm87AAAKJnM8AAAKEQtvPQAACiYRDG8+AAAKCRdYDREHbyEAAAo6BP///94MEQcsBxEHbyIAAArc
AgQHKAwAAAbeEG8/AAAKbxQAAApzQAAACnoqAEFMAAACAAAAKgAAAC8AAABZAAAAFQAAAAAAAAAC
AAAA3QAAAAMBAADgAQAADAAAAAAAAAAAAAAAAAAAAPYBAAD2AQAAEAAAAB0AAAEbMAQAmAAAAAYA
ABFzTgAACiZzMQAACiZzMgAACgoCKAEAAAZzMwAACgtzNAAACgdvNQAACiUHbzYAAAolfgYAAARv
NwAACiUabzgAAAolbzkAAApyjQAAcARzOgAACm87AAAKJiVvOQAACnIHAQBwA3M6AAAKbzsAAAom
czwAAAoGbz0AAAomB28+AAAKBgzeEG8/AAAKbxQAAApzQAAACnoIKgEQAAAAABIAdIYAEB0AAAEb
MAQArwAAAAYAABFzTgAACiZzMQAACiZzMgAACgoCKAEAAAZzMwAACgtzNAAACgdvNQAACiUHbzYA
AAolfgYAAARvNwAACiUabzgAAAolbzkAAApyjQAAcANzOgAACm87AAAKJiVvOQAACnIVAQBwBHM6
AAAKbzsAAAomJW85AAAKcgcBAHAFczoAAApvOwAACiZzPAAACgZvPQAACiYHbz4AAAoGDN4Qbz8A
AApvFAAACnNAAAAKeggqAAEQAAAAABIAi50AEB0AAAEbMAQAxAAAAAcAABFzTgAACiZzMQAACiZz
MgAACgoCKAEAAAZzMwAACgtzNAAACgdvNQAACiUHbzYAAAolfgYAAARvNwAACiUabzgAAAolbzkA
AApyjQAAcH4PAAAEbxUAAApzOgAACm87AAAKJiVvOQAACnIHAQBwA28VAAAKczoAAApvOwAACiYl
bzkAAApyLQEAcARvFQAACnM6AAAKbzsAAAomczwAAAoGbz0AAAomB28+AAAK3hBvPwAACm8UAAAK
c0AAAAp63gMm/hoqARwAAAAAEgCcrgAQHQAAAQAAAADAwAADHQAAAR4CKE8AAAoqHgIoUAAACiqu
fgMAAAQtHnJJAQBw0AMAAAIoUQAACm9SAAAKc1MAAAqAAwAABH4DAAAEKhp+BAAABCoeAoAEAAAE
Khp+BQAABCoeAihUAAAKKi5zEwAABoAFAAAEKgAAEzABAHkAAAAAAAAAcrsBAHCABgAABHLhAQBw
gAcAAARyDwIAcIAIAAAEcjsCAHCACQAABHI/AgBwgAoAAARyQwIAcIALAAAEckcCAHCADAAABHJL
AgBwgA0AAARyTwIAcIAOAAAEclMCAHCADwAABHJTAgBwgBAAAARyVwIAcIARAAAEKh4CexIAAAQq
IgIDfRIAAAQqHgJ7EwAABCoiAgN9EwAABCoeAnsUAAAEKiICA30UAAAEKkJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAAQJAAAjfgAAcAkAANQLAAAjU3RyaW5ncwAAAABEFQAAYAIA
ACNVUwCkFwAAEAAAACNHVUlEAAAAtBcAANADAAAjQmxvYgAAAAAAAAACAAABVx2iCQkLAAAA+gEz
ABYAAAEAAAA/AAAABwAAABcAAAAcAAAAFQAAAFQAAAACAAAAHwAAAAcAAAAEAAAACAAAAA4AAAAI
AAAAAQAAAAcAAAABAAAAAQAAAAEAAAAAANgFAQAAAAAABgBsBPcIBgD7BPcIBgC4A+QIDwBrCQAA
BgDlA9oGBgBPBNoGBgAwBNoGBgDiBNoGBgCMBNoGBgClBNoGBgD8A9oGBgAXBDAFCgDABIcFCgD6
AocFBgCAA/cIDgAbCy4BEgBFC88JFgDxCYACDgCbCy4BBgBsAEMBBgARCxcGBgCjCIoKDgBxBi4B
BgA5AhcGDgAmAi4BBgBJAEMBGgBaBjIIDgB4By8LBgCGBxcGUwBOBwAAewCyCAAAUwAABwAAgwCy
CAAAGgCrCzIIBgAjBhcGBgCbA+QIBgBVCBcJBgDBB8UGFgBrA8IFFgDMA8IFFgAxA7AGBgBXAEMB
CgCwBYcFHgDFCZACHgAwApACBgBMBRcGDgDsBi4BDgAWAy4BDgAQBy4BGgBuC6MHDgA8By4BBgBp
AhcGDgCACC8LDgD1AS8LDgBrB5AHDgDrAZAHDgC+Ai4BDgAlBy8LDgBzCC8LDgCDCJAHBgDFAhcG
BgBFAhcGBgC2C9oGAAAAALEAAAAAAAEAAQABABAAZgYlADkAAQABAAAAEAAeCXoJVQADAA4AAAEQ
AAsKegmlAAUAEgCBARAAZQg/ClUABgAVAAEAEAB6CxQKVQASABYAAwEAAM8KAACNABUAHQABAHkB
xAABAJkBxAARACgGVQIRAOoCWgIRAAACXwITAM0HxAATAPcAxAATAOEAxAATAF4AxAATAHkAxAAT
AIcAxAATAJUAxAATAKMAxAATACMIxAATAHwGxAATAF0DxAATAAgIxAABAGIBxAABANEBYwIBALoB
awIGBtkAcwJWgL8KdgJWgMoCdgJQIAAAAACGCDQGVAABAFggAAAAAIYIRwYQAAEAYSAAAAAAhgjg
B1QAAgBpIAAAAACGCPQHEAACAHQgAAAAAIYAbAYGAAMAjCQAAAAAlgCzB3oCAwAEJQAAAACBALQJ
gAIEAEgnAAAAAIEAEwCAAgYASCoAAAAAgQABAIcCCACoLAAAAACBAEcIjwILAFwtAAAAAIEAnQqW
Ag0AKC4AAAAAgQCUBp4CEAAULwAAAACGGL0IBgASABwvAAAAAIMYvQgGABIAJC8AAAAAkwhRCKQC
EgBQLwAAAACTCNICqgISAFcvAAAAAJMI3gKwAhIAXy8AAAAAlggjC7cCEwBmLwAAAACGGL0IBgAT
AG4vAAAAAJEYwwi8AhMAfC8AAAAAkRjDCLwCEwABMAAAAACGCBoBVAATAAkwAAAAAIYIJAEQABMA
EjAAAAAAhgjKCMACFAAaMAAAAACGCNcIyQIUACMwAAAAAIYIjwjTAhUAKzAAAAAAhgiZCNwCFQAc
LwAAAACGGL0IBgAWAAAAAQAjBQAAAQAjBQAAAQCjCwAAAQAYCwAAAgAeCAAAAQAYCwAAAgCpBgAA
AQAYCwAAAgCpBgAAAwATCAAAAQAeCAAAAgCpBgAAAQCpBgAAAgATCAAAAwAeCAAAAQAeCAAAAgAO
AQAAAQAjBQAAAQAjBQAAAQAjBQAAAQAjBQkAvQgBABEAvQgGABkAvQgKACkAvQgQADEAvQgQADkA
vQgQAEEAvQgQAEkAvQgQAFEAvQgQAFkAvQgQAGEAvQgQAGkAvQgGAHkAvQgGACEBvQgGAEEBvQgV
AHEAxwo9AFkBwQlDAGEBBQZJAGkBGQVQAKkASgVUAHEBHgZUAIEAqQlYAIEBZAteAHkBBQZiAAwA
vQgGAJkAHAJ+AMkAfgqDAIEBrwiJALEAWAtQALkAcQJUAJkABQaOAAwADgaUALEAggucAMEATwMG
AJEB9gqgAMkA3Qq+AHEBywvEABQAvQgGAJkABQbPAHEB7wrUABEBVwPaABEBBQbhANkABQbnABEB
rwjtABwAWAv9AHEBUwUCAXEBvwsIAaEBsAIOAakBvQgGAIEAvQgGAOEAvQgQALEBvQgGALkBYQYG
ALEBXAcTAcEBiwsQAMEBugIZAbEBsAogAdkBvQgmAdEBXgEsAakBvQg1AeEBAAY8AbkBSQMGAOkA
EAJUAOkAvQgQAJEBBgtvASQA5gqGASwArwiYATQAWAv9AHEB7wqqATQAggucACQAAAqxATwArwjF
AUQAWAvZAXEB7wreAUQAggucAHEBXQVeAHEBKQXmAckAvQgGAHEAvQgGAKkAvQgGAOkBVwIZAukB
sgsiAikBvQgoAkkBvQgGAAgAWABLAggAXABQAiAAawBQAiEAawBQAi4ACwANAy4AEwAWAy4AGwA1
Ay4AIwA+Ay4AKwBnAy4AMwBnAy4AOwBnAy4AQwA+Ay4ASwBtAy4AUwBnAy4AWwCEA0AAawBQAkEA
awBQAkMAYwBQAmAAawBQAmMAcwBQAmkAewA1A4AAawBQAokAewA1A6EAawBQAkECawBQAmECawBQ
AoECawBQAsACawBQAuACawBQAgADawBQAiADawBQAkADawBQAmADawBQAhwAaAClAEIB6wEJAhIC
AgABAAMAAwAEAAUABgAGAAAASwbmAgAA+AfmAgAAVQjqAgAA8gLwAgAAJwv2AgAAKAHmAgAA2wj7
AgAAnQgEAwIAAQADAAEAAgADAAIAAwAFAAEABAAFAAIADwAHAAIAEAAJAAEAEQAJAAIAEgALAAIA
FgANAAEAFwANAAIAGAAPAAEAGQAPAAIAGgARAAEAGwARAHcAxwD2AH8BkQGjAb0B0QEEgAAAAQAA
AHsjGV4AAAAAAAAlAAAABAAAAAAAAAAAAAAAMAI6AQAAAAAQAAAAAAAAAAAAAAA5AmgFAAAAAAQA
AAAAAAAAAAAAADACLgEAAAAABAAAAAAAAAAAAAAAMAJpCgAAAAAEAAAAAAAAAAAAAAAwAhcGAAAA
AA0AAAAAAAAAAAAAAEICowcAAAAAEAAAAAAAAAAAAAAAOQK6AAAAAAAAAAAAAQAAACgJAAAHAAIA
gwB2AQAAAAAAVXBkYXRlVGFibGVzVjIwMDAASW5zZXJ0VGFibGVzVjIwMDAAU1RfZDNjY2FmMzQz
MWIyNDI1MzljOGI3MTZmMjY1MTE4MzEASUVudW1lcmF0b3JgMQBMaXN0YDEAYWNjaW9uQ29kaWdv
MQBEaWN0aW9uYXJ5YDIAYWNjaW9uQ29kaWdvMgBhY2Npb25Db2RpZ28zAGFjY2lvbkNvZGlnbzQA
YWNjaW9uQ29kaWdvNQA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFs
dWVfXwBzcF9SZWdpc3Ryb01pZ3JhT2xkRmEAc3BfUmVnaXN0cm9NaWdyYWNpb25GYQBub21icmVU
YWJsYQBnZXRfdGFibGEAc2V0X3RhYmxhAFN5c3RlbS5EYXRhAG1zY29ybGliAFN5c3RlbS5Db2xs
ZWN0aW9ucy5HZW5lcmljAEFkZAA8dGFibGE+a19fQmFja2luZ0ZpZWxkADxjb25leGlvbk9yaWdl
bj5rX19CYWNraW5nRmllbGQAPGNvbmV4aW9uRGVzdGlubz5rX19CYWNraW5nRmllbGQAPHZhbG9y
PmtfX0JhY2tpbmdGaWVsZAA8Y29sdW1uYXM+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxD
b21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBnZXRfVGFibGUARGF0YVRhYmxlAFZh
cmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENv
bnNvbGUAZ2V0X0NvbHVtbk5hbWUAU3lzdGVtLk5ldC5NaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAV3JpdGVMaW5lAHNldF9Db21tYW5kVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
SW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UA
RGlzcG9zZQBQYXJzZQBEZXN0aW5vVXBkYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBnZXRfVmFsdWUAdmFsdWUAUmVtb3ZlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJp
bmcAU3Vic3RyaW5nAGdldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwA
U3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2QzY2NhZjM0MzFiMjQyNTM5YzhiNzE2ZjI2NTExODMx
LmRsbABGaWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBUcmltAEVudW0AcmVzb3VyY2VNYW4A
Z2V0X2NvbmV4aW9uT3JpZ2VuAHNldF9jb25leGlvbk9yaWdlbgBKVG9rZW4AT3BlbgBTY3JpcHRN
YWluAERhdGFDb2x1bW4AYWNjaW9uTW9kaWZpY2FNaWdyYWNpb24AVXBkYXRlVGFibGVNaWdyYWNp
b24AYWNjaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAERhdGFUYWJsZUNvbGxlY3Rpb24AVmFsdWVDb2xsZWN0aW9uAERhdGFDb2x1
bW5Db2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24AS2V5
Q29sbGVjdGlvbgBzZXRfQ29ubmVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNl
cHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAE5ld3RvbnNvZnQuSnNvbgBEYXRhUm93VG9Kc29uAEN1
bHR1cmVJbmZvAHNwX01pZ3JhY2lvbkNvZGlnbwBnZXRfY29uZXhpb25EZXN0aW5vAHNldF9jb25l
eGlvbkRlc3Rpbm8AYWNjaW9uVGlwbwBjb2RpZ29UaXBvAHRpcG8AYWNjaW9uUmVnaXN0cm8ATmV3
dG9uc29mdC5Kc29uLkxpbnEAY29uc3VsdGFyAGdldF9SZXNvdXJjZU1hbmFnZXIAc3RyaW5nSGFu
ZGxlcgBTcWxQYXJhbWV0ZXIAU3FsRGF0YUFkYXB0ZXIAZ2V0X3ZhbG9yAHNldF92YWxvcgBJRW51
bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBnZXRfY29sdW1uYXMAc2V0X2NvbHVt
bmFzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU1RfZDNjY2FmMzQzMWIyNDI1MzljOGI3MTZmMjY1MTE4MzEuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2QzY2NhZjM0MzFiMjQy
NTM5YzhiNzE2ZjI2NTExODMxLlByb3BlcnRpZXMAZ2V0X1RhYmxlcwBJbnNlcnRUYWJsZXMAZ2V0
X1ZhcmlhYmxlcwBTeXN0ZW0uV2luZG93cy5Gb3Jtcy5WaXN1YWxTdHlsZXMATWVkaWFUeXBlTmFt
ZXMAZ2V0X1ZhbHVlcwBTZXR0aW5ncwBTVF9kM2NjYWYzNDMxYjI0MjUzOWM4YjcxNmYyNjUxMTgz
MS5Nb2RlbHMAU1RfZDNjY2FmMzQzMWIyNDI1MzljOGI3MTZmMjY1MTE4MzEuVXRpbHMAU3lzdGVt
LldpbmRvd3MuRm9ybXMAZ2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGNvbnN1bHRhclJl
Z2lzdHJvcwBnZXRfUGFyYW1ldGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRf
Um93cwBnZXRfS2V5cwBDb25jYXQAU2VyaWFsaXplT2JqZWN0AERlc2VyaWFsaXplT2JqZWN0AGR0
AERhdGFTZXQAZ2V0X0RlZmF1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFZpc3VhbFN0eWxlRWxl
bWVudABnZXRfQ3VycmVudABnZXRfQ291bnQASnNvbkNvbnZlcnQAUmVxdWVzdABNb3ZlTmV4dABz
ZXRfQ29tbWFuZFRleHQARGF0YVJvdwBkYXRhUm93AEpBcnJheQBnZXRfQXNzZW1ibHkAb3BfRXF1
YWxpdHkARW1wdHkAAAAAAClVAHMAZQByADoAOgBjAG8AbgBlAHgAaQBvAG4ATwByAGkAZwBlAG4A
ACtVAHMAZQByADoAOgBjAG8AbgBlAHgAaQBvAG4ARABlAHMAdABpAG4AbwAAC3QAYQBiAGwAYQAA
D18AUABSAFUARQBCAEEAAAtkAGEAdABvAHMAAAEABUYAQQAABUMAQgAAD0AAYQBjAGMAaQBvAG4A
ABlAAG4AbwBtAGIAcgBlAFQAYQBiAGwAZQAAC0AAagBzAG8AbgAAAywAAAMnAAEFJwAsAAETQABj
AG8AbAB1AG0AbgBhAHMAABFAAHYAYQBsAG8AcgBlAHMAAA9mAGkAbAB0AHIAbwBzAAANQAB0AGkA
cABvAFUAABdAAGMAbwBkAGkAZwBvAFQAaQBwAG8AABtAAG4AbwBtAGIAcgBlAFQAYQBiAGwAZQBV
AABxUwBUAF8AZAAzAGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYA
MgA2ADUAMQAxADgAMwAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAlcwBwAF8ATQBpAGcAcgBhAGMAaQBvAG4AQwBvAGQAaQBnAG8AAC1zAHAAXwBSAGUAZwBpAHMA
dAByAG8ATQBpAGcAcgBhAGMAaQBvAG4ARgBhAAArcwBwAF8AUgBlAGcAaQBzAHQAcgBvAE0AaQBn
AHIAYQBPAGwAZABGAGEAAAMxAAADMgAAAzMAAAM0AAADNQAAA0kAAANVAAAFVQBDAAAAAAC3DZyW
YE+gSq0M6SrLCgHOAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAnSAHFBJBEkESQRJBEkESQRJB
EkESQRJBCAgICAgICAgICAUgABKArQUgABKAsQYgARKAtRwDIAAcAyAADgUgABKAvQMgAAgFIAES
ZQgOBwQVElECDhwSWRJdEmEGFRJRAg4cBCAAEmUFIAASgMUEIAASWQUgARwSXQcgAgETABMBAyAA
AgQAAQ4cGAcMDg4SWRJNEmEVEmkBEm0OCA4OEkEScQUgABKAzQIGDgcVEoCpARIYBCABHAgFAAIO
Dg4GAAESgIkOBSABEm0IBSABEm0cCCAAFRJpARJtBhUSaQESbQQgABMABSACDggIBQACAg4OBAAB
AQ4FIAEBEnEGIAEBEYDlBSAAEoDpBSACAQ4cCCABEoDtEoDtBiABARKA2QUgAQgSQSwHEA4OElkS
TRJhFRJpARJtDg4VElECDg4OEkEScRURfQIODg4VEYCFAg4ODgYQAQEeAA4ICgEVElECDg4GFRJR
Ag4OCiAAFRJ5AhMAEwEGFRJ5Ag4OCiAAFRF9AhMAEwEGFRF9Ag4OBgADDg4ODgsgABUSgIECEwAT
AQcVEoCBAg4OCyAAFRGAhQITABMBBxURgIUCDg4EIAATAQcABA4ODg4OBCABDggdBw0ODhKAiQgS
WRJNEmEVEmkBEm0SbRJtDhJBEnEIBwMSQRJxEkEGBwISQRJxCAABEoD1EYD5BSAAEoD9ByACAQ4S
gP0It3pcVhk04IkIiYRdzYCAzJEIMK1P5rKmru0EAAAAAAQBAAAABAYSgJUEBhKAmQMGEhAHBhUS
gKkBDgcGFRKAqQEcAgYIAwYRHAUAAQ4STQYgAgESZQ4HIAMBEmUODgYgAhJBDg4HIAMSQQ4ODgUg
AgEODgUAABKAlQUAABKAmQYAAQESgJkEAAASEAMAAAEIIAAVEoCpAQ4JIAEBFRKAqQEOCCAAFRKA
qQEcCSABARUSgKkBHAMoAA4FCAASgJUFCAASgJkECAASEAgoABUSgKkBDggoABUSgKkBHAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZDNjY2Fm
MzQzMWIyNDI1MzljOGI3MTZmMjY1MTE4MzEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0LjcAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACYTAAAAAAAAAAAAACyTAAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAApEwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAA
AAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAZXnsjAAABABleeyM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGQAMwBj
AGMAYQBmADMANAAzADEAYgAyADQAMgA1ADMAOQBjADgAYgA3ADEANgBmADIANgA1ADEAMQA4ADMA
MQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5ADAAOAAzAC4AMgA0
ADAAOAA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGQAMwBjAGMA
YQBmADMANAAzADEAYgAyADQAMgA1ADMAOQBjADgAYgA3ADEANgBmADIANgA1ADEAMQA4ADMAMQAu
AGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBr
AHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8A
ZAAzAGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYAMgA2ADUAMQAx
ADgAMwAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGQA
MwBjAGMAYQBmADMANAAzADEAYgAyADQAMgA1ADMAOQBjADgAYgA3ADEANgBmADIANgA1ADEAMQA4
ADMAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAwADgA
MwAuADIANAAwADgAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAwADgAMwAuADIANAAwADgAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADEPAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Secuencia 2 Codigo 1"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{7D91D90D-FF9B-480D-A877-0A87F25A5257}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Secuencia 2 Codigo 1">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Secuencia 2 Codigo 1\Consulta Registros Migrados"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{EC4182A2-AECE-407A-8C98-0E2934462A86}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Consulta Registros Migrados"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
              SQLTask:SqlStatementSource="select  codigo&#xA;from temp_registroMigracion&#xA;where status=2 AND tipo IN ('I') AND codigo IS NOT NULL AND codigo2 IS NULL and fechaMigracion is null&#xA;order by fechaRegistro DESC&#xA;"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::dtConsultaRegistrosMIgrados" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Secuencia 2 Codigo 1\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{5A92C695-9C6D-45CB-9886-C90F15FA1E0E}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{3A62C71B-E49B-4575-A7AF-DFEA7D275932}"
            DTS:ObjectName="{3A62C71B-E49B-4575-A7AF-DFEA7D275932}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateAllRows"
                VarName="User::dtConsultaRegistrosMIgrados" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Secuencia 2 Codigo 1\Foreach Loop Container\Actualizacion de Fecha Migracion"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{308B8788-D11A-4792-A788-C3C20F155BC7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Actualizacion de Fecha Migracion"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
                  SQLTask:SqlStatementSource="UPDATE temp_registroMigracion SET fechaMigracion=GETDATE() &#xA;WHERE codigo = ? " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Secuencia 2 Codigo 1\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{B4434CDF-546D-47FB-9C0E-4C3225B6CC9F}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Depuracion de Registros en el Destino cuando Migra"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{948782EB-C079-4FA0-AF5C-E26CA168D8D1}"
                  SQLTask:SqlStatementSource="DELETE FROM temp_registroMigracion WHERE codigo = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Secuencia 2 Codigo 1\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{C8D5EDAA-64B7-4BDB-9EB7-A7618D2AF99E}"
              DTS:From="Package\Secuencia 2 Codigo 1\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Secuencia 2 Codigo 1\Foreach Loop Container\Actualizacion de Fecha Migracion" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{86C90E42-7837-4B64-A11F-6BF0D9ACE04F}"
              DTS:ObjectName="{86C90E42-7837-4B64-A11F-6BF0D9ACE04F}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::codigo" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Secuencia 2 Codigo 1.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{E77C3AF3-AD2B-4663-909B-5111F833036D}"
          DTS:From="Package\Secuencia 2 Codigo 1\Consulta Registros Migrados"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Secuencia 2 Codigo 1\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Secuencia 3 Codigo 2"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{CE1128E1-510C-404D-96CE-B8C9BCDC35E4}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Secuencia 3 Codigo 2">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Secuencia 3 Codigo 2\Consulta Registros Migrados"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{b3044b6e-5d0e-4090-8531-a6be384d20ad}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Consulta Registros Migrados"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
              SQLTask:SqlStatementSource="select  codigo,codigo2&#xA;from temp_registroMigracion&#xA;where status=2 AND tipo IN ('I','U') AND codigo IS NOT NULL AND codigo2 IS NOT NULL AND codigo3 IS NULL and fechaMigracion is null&#xA;order by fechaRegistro DESC"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::dtConsultaRegistrosMigrados2" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Secuencia 3 Codigo 2\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{5e1e1c7f-456d-4399-907a-02e21dc046cc}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{AD800978-72EB-452A-9CBD-D73BCE1240CE}"
            DTS:ObjectName="{AD800978-72EB-452A-9CBD-D73BCE1240CE}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::dtConsultaRegistrosMigrados2" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Secuencia 3 Codigo 2\Foreach Loop Container\Actualizacion de Fecha Migracion"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{487b2c2d-cb32-4979-b1ad-bec3494fbfba}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Actualizacion de Fecha Migracion"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
                  SQLTask:SqlStatementSource="UPDATE temp_registroMigracion SET fechaMigracion=GETDATE() &#xA;WHERE codigo = ? and codigo2 = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo2"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Secuencia 3 Codigo 2\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{8eb20332-b014-4cd1-abf7-2bdc57aaeedb}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Depuracion de Registros en el Destino cuando Migra"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{948782EB-C079-4FA0-AF5C-E26CA168D8D1}"
                  SQLTask:SqlStatementSource="DELETE FROM temp_registroMigracion WHERE codigo = ? and codigo2=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo2"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Secuencia 3 Codigo 2\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{2cb33104-adb0-4f99-ba60-90e6b0b91e09}"
              DTS:From="Package\Secuencia 3 Codigo 2\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Secuencia 3 Codigo 2\Foreach Loop Container\Actualizacion de Fecha Migracion" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{60438489-7436-4408-9EF1-403423D26A06}"
              DTS:ObjectName="{60438489-7436-4408-9EF1-403423D26A06}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::codigo" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{1AA65E4C-2195-45C8-8F29-B3DE30FC750B}"
              DTS:ObjectName="{1AA65E4C-2195-45C8-8F29-B3DE30FC750B}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::codigo2" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Secuencia 3 Codigo 2.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{472644B3-F95B-47DC-9B41-CA3E2CBC9723}"
          DTS:From="Package\Secuencia 3 Codigo 2\Consulta Registros Migrados"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Secuencia 3 Codigo 2\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Secuencia 4 Codigo 3"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{07f4bce8-3902-4fea-b425-892adb41c520}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Secuencia 4 Codigo 3">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Secuencia 4 Codigo 3\Consulta Registros Migrados"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{cd590b80-87c3-4581-b9f1-ccdc20b8b933}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Consulta Registros Migrados"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
              SQLTask:SqlStatementSource="select  codigo,codigo2,codigo3&#xA;from temp_registroMigracion&#xA;where status=2 AND tipo IN ('I','U') AND codigo IS NOT NULL AND codigo2 IS NOT NULL AND codigo3 IS NOT NULL AND codigo4 IS NULL and fechaMigracion is null&#xA;order by fechaRegistro DESC"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::dtConsultaRegistrosMigrados2" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Secuencia 4 Codigo 3\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{86791319-61f8-470c-afcb-933b8234f352}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{26ab61c7-da59-42c6-b86f-1dadb774a9d0}"
            DTS:ObjectName="{AD800978-72EB-452A-9CBD-D73BCE1240CE}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::dtConsultaRegistrosMigrados2" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Secuencia 4 Codigo 3\Foreach Loop Container\Actualizacion de Fecha Migracion"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{845a59ed-afa5-4cc6-9492-2208a2579db3}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Actualizacion de Fecha Migracion"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
                  SQLTask:SqlStatementSource="UPDATE temp_registroMigracion SET fechaMigracion=GETDATE() &#xA;WHERE codigo = ? and codigo2 = ? AND codigo3 = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo2"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo3"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Secuencia 4 Codigo 3\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{c17ec2e3-1baf-456f-ac0d-1998fb266f3a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Depuracion de Registros en el Destino cuando Migra"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{948782EB-C079-4FA0-AF5C-E26CA168D8D1}"
                  SQLTask:SqlStatementSource="DELETE FROM temp_registroMigracion WHERE codigo = ? and codigo2=? AND codigo3=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo2"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo3"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Secuencia 4 Codigo 3\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{bf7a144c-3f1f-498b-aefe-1b192ae7c1ed}"
              DTS:From="Package\Secuencia 4 Codigo 3\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Secuencia 4 Codigo 3\Foreach Loop Container\Actualizacion de Fecha Migracion" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{EE6DDA2E-EC39-4950-A2B3-4983639F7AAE}"
              DTS:ObjectName="{EE6DDA2E-EC39-4950-A2B3-4983639F7AAE}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::codigo" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{35AD8EB7-C414-4FE0-B818-9227FD369AE4}"
              DTS:ObjectName="{35AD8EB7-C414-4FE0-B818-9227FD369AE4}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::codigo2" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{C592C04A-A20E-4DA4-B51D-29FEA43F66C7}"
              DTS:ObjectName="{C592C04A-A20E-4DA4-B51D-29FEA43F66C7}"
              DTS:ValueIndex="2"
              DTS:VariableName="User::codigo3" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Secuencia 4 Codigo 3.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{03d69d7e-b9ca-4a03-aca1-999d4e39c978}"
          DTS:From="Package\Secuencia 4 Codigo 3\Consulta Registros Migrados"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Secuencia 4 Codigo 3\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Secuencia 5 Codigo 4"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{ae8b64a6-8a05-4d31-96ef-7080ef6a1846}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Secuencia 5 Codigo 4">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Secuencia 5 Codigo 4\Consulta Registros Migrados"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d5f5e4de-e94e-4f09-8c2a-b76b645e7ade}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Consulta Registros Migrados"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
              SQLTask:SqlStatementSource="select  codigo,codigo2,codigo3,codigo4&#xA;from temp_registroMigracion&#xA;where status=2 AND tipo IN ('I','U') AND codigo IS NOT NULL AND codigo2 IS NOT NULL AND codigo3 IS NOT NULL AND codigo4 IS NOT NULL AND codigo5 IS NULL and fechaMigracion is null&#xA;order by fechaRegistro DESC"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::dtConsultaRegistrosMigrados2" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Secuencia 5 Codigo 4\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{74a7b2f8-b962-4d13-a7e3-162e4a5dcfdd}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{3f2b522f-cf31-44ad-af94-a79f7df10b4d}"
            DTS:ObjectName="{AD800978-72EB-452A-9CBD-D73BCE1240CE}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::dtConsultaRegistrosMigrados2" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Secuencia 5 Codigo 4\Foreach Loop Container\Actualizacion de Fecha Migracion"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{778f3251-2f2a-4301-94dc-7bd1619e3092}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Actualizacion de Fecha Migracion"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
                  SQLTask:SqlStatementSource="UPDATE temp_registroMigracion SET fechaMigracion=GETDATE() &#xA;WHERE codigo = ? and codigo2 = ? AND codigo3 = ? and codigo4=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo2"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo3"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo4"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Secuencia 5 Codigo 4\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f02bd92b-d9fb-420d-af17-b8c9a61b16fe}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Depuracion de Registros en el Destino cuando Migra"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{948782EB-C079-4FA0-AF5C-E26CA168D8D1}"
                  SQLTask:SqlStatementSource="DELETE FROM temp_registroMigracion WHERE codigo = ? and codigo2=? AND codigo3=? AND codigo4 = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo2"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo3"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo4"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Secuencia 5 Codigo 4\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{971e3077-ee11-416c-a436-c249e20bad7a}"
              DTS:From="Package\Secuencia 5 Codigo 4\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Secuencia 5 Codigo 4\Foreach Loop Container\Actualizacion de Fecha Migracion" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{779014F3-A080-46DF-BCB1-13902B156F24}"
              DTS:ObjectName="{779014F3-A080-46DF-BCB1-13902B156F24}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::codigo" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{25563931-D201-48BF-A17D-EF66EB594004}"
              DTS:ObjectName="{25563931-D201-48BF-A17D-EF66EB594004}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::codigo2" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{4DDE5BD4-FB55-43C9-9C2B-21B717E1821B}"
              DTS:ObjectName="{4DDE5BD4-FB55-43C9-9C2B-21B717E1821B}"
              DTS:ValueIndex="2"
              DTS:VariableName="User::codigo3" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{6270010A-CF01-4932-A030-7D7AF5E34594}"
              DTS:ObjectName="{6270010A-CF01-4932-A030-7D7AF5E34594}"
              DTS:ValueIndex="3"
              DTS:VariableName="User::codigo4" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Secuencia 5 Codigo 4.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{b588e178-69a1-4a8a-9421-a03fa002a61a}"
          DTS:From="Package\Secuencia 5 Codigo 4\Consulta Registros Migrados"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Secuencia 5 Codigo 4\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Secuencia 6 Codigo 5"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{d7f855cd-7056-4ea5-af28-6fa1230af1b9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Secuencia 6 Codigo 5">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Secuencia 6 Codigo 5\Consulta Registros Migrados"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ae99cf46-dac3-4eeb-8e4e-5ed260ce6af5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Consulta Registros Migrados"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
              SQLTask:SqlStatementSource="select  codigo,codigo2,codigo3,codigo4,codigo5&#xA;from temp_registroMigracion&#xA;where status=2 AND tipo IN ('I','U') AND codigo IS NOT NULL AND codigo2 IS NOT NULL AND codigo3 IS NOT NULL AND codigo4 IS NOT NULL AND codigo5 IS NOT NULL and fechaMigracion is null&#xA;order by fechaRegistro DESC"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::dtConsultaRegistrosMigrados2" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Secuencia 6 Codigo 5\Foreach Loop Container"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{8d837c56-2180-47a0-9d61-48e62b51087f}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Loop Container">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{a87170d0-324b-4526-ad89-ae7e121020b7}"
            DTS:ObjectName="{AD800978-72EB-452A-9CBD-D73BCE1240CE}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::dtConsultaRegistrosMigrados2" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Secuencia 6 Codigo 5\Foreach Loop Container\Actualizacion de Fecha Migracion"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{10fd1ff6-80e1-4377-a9c7-f379d98c41c9}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Actualizacion de Fecha Migracion"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{5CD82F88-5DCE-4867-AAAF-963DF3C7DE4A}"
                  SQLTask:SqlStatementSource="UPDATE temp_registroMigracion SET fechaMigracion=GETDATE() &#xA;WHERE codigo = ? and codigo2 = ? AND codigo3 = ? and codigo4=? AND codigo5 =?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo2"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo3"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo4"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo5"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Secuencia 6 Codigo 5\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{156f4899-d6e7-4f7e-b6aa-728848e1fd46}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Depuracion de Registros en el Destino cuando Migra"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{948782EB-C079-4FA0-AF5C-E26CA168D8D1}"
                  SQLTask:SqlStatementSource="DELETE FROM temp_registroMigracion WHERE codigo = ? and codigo2=? AND codigo3=? AND codigo4 = ? AND codigo5 = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo2"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo3"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo4"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="NewParameterName"
                    SQLTask:DtsVariableName="User::codigo5"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Secuencia 6 Codigo 5\Foreach Loop Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{e317dea6-7c37-4882-a221-3220f1a5b7d2}"
              DTS:From="Package\Secuencia 6 Codigo 5\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Secuencia 6 Codigo 5\Foreach Loop Container\Actualizacion de Fecha Migracion" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{8F380DE2-A95D-4803-BA94-FD1654384E40}"
              DTS:ObjectName="{8F380DE2-A95D-4803-BA94-FD1654384E40}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::codigo" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{5FA4E2CD-C624-4432-AD25-7183A8742FD6}"
              DTS:ObjectName="{5FA4E2CD-C624-4432-AD25-7183A8742FD6}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::codigo2" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{DB11ED8E-31D8-455E-AA7D-FF81C9422CEE}"
              DTS:ObjectName="{DB11ED8E-31D8-455E-AA7D-FF81C9422CEE}"
              DTS:ValueIndex="2"
              DTS:VariableName="User::codigo3" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{B84798B0-A536-4CB1-BFB3-EC3D7CD8D26F}"
              DTS:ObjectName="{B84798B0-A536-4CB1-BFB3-EC3D7CD8D26F}"
              DTS:ValueIndex="3"
              DTS:VariableName="User::codigo4" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{31F946F5-0999-4C0A-B98E-167F15F4F4A5}"
              DTS:ObjectName="{31F946F5-0999-4C0A-B98E-167F15F4F4A5}"
              DTS:ValueIndex="4"
              DTS:VariableName="User::codigo5" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Secuencia 6 Codigo 5.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{16f6ff91-741a-4bb2-8972-1befcdfd0cc8}"
          DTS:From="Package\Secuencia 6 Codigo 5\Consulta Registros Migrados"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Secuencia 6 Codigo 5\Foreach Loop Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A212F371-8795-4482-ADA3-EDA950D7A725}"
      DTS:From="Package\Secuencia 2 Codigo 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Secuencia 3 Codigo 2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{2FCB37E6-D944-4B55-B90A-1BE323C75845}"
      DTS:From="Package\Secuencia 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Secuencia 2 Codigo 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{C0645F01-B9D4-42EC-AB81-9A70013B82B4}"
      DTS:From="Package\Secuencia 3 Codigo 2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Secuencia 4 Codigo 3" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{B2537086-8415-48B0-BE19-43737F106A5D}"
      DTS:From="Package\Secuencia 4 Codigo 3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Secuencia 5 Codigo 4" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{63922700-CB3D-406B-9035-BA4AC7E83D25}"
      DTS:From="Package\Secuencia 5 Codigo 4"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Secuencia 6 Codigo 5" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="220,42"
          Id="Package\Secuencia 2 Codigo 1\Consulta Registros Migrados"
          TopLeft="71.5,6" />
        <EdgeLayout
          Id="Package\Secuencia 2 Codigo 1.PrecedenceConstraints[Constraint]"
          TopLeft="184,48">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="243,42"
          Id="Package\Secuencia 2 Codigo 1\Foreach Loop Container\Actualizacion de Fecha Migracion"
          TopLeft="73.5,97.25" />
        <NodeLayout
          Size="336,42"
          Id="Package\Secuencia 2 Codigo 1\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
          TopLeft="21.5,5.5" />
        <EdgeLayout
          Id="Package\Secuencia 2 Codigo 1\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="192.25,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.75"
              Start="0,0"
              End="0,42.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="362,194"
          Size="362,237"
          Id="Package\Secuencia 2 Codigo 1\Foreach Loop Container"
          TopLeft="5.5,108" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="372,400"
          Size="372,443"
          Id="Package\Secuencia 2 Codigo 1"
          TopLeft="259.428571428571,29.8571428571429" />
        <NodeLayout
          Size="243,42"
          Id="Package\Secuencia 3 Codigo 2\Foreach Loop Container\Actualizacion de Fecha Migracion"
          TopLeft="74.75,97.25" />
        <NodeLayout
          Size="336,42"
          Id="Package\Secuencia 3 Codigo 2\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
          TopLeft="21.5,5.5" />
        <EdgeLayout
          Id="Package\Secuencia 3 Codigo 2\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="192.875,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.75"
              Start="0,0"
              End="0,42.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="362,194"
          Size="362,237"
          Id="Package\Secuencia 3 Codigo 2\Foreach Loop Container"
          TopLeft="27.5,109" />
        <NodeLayout
          Size="220,42"
          Id="Package\Secuencia 3 Codigo 2\Consulta Registros Migrados"
          TopLeft="80,31.75" />
        <EdgeLayout
          Id="Package\Secuencia 3 Codigo 2.PrecedenceConstraints[Constraint]"
          TopLeft="190,73.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.5,35.25"
              Start="0,0"
              End="18.5,27.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.625" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.625"
                    Point2="0,17.625"
                    Point3="4,17.625" />
                  <mssgle:LineSegment
                    End="14.5,17.625" />
                  <mssgle:CubicBezierSegment
                    Point1="14.5,17.625"
                    Point2="18.5,17.625"
                    Point3="18.5,21.625" />
                  <mssgle:LineSegment
                    End="18.5,27.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="401,402"
          Size="401,445"
          Id="Package\Secuencia 3 Codigo 2"
          TopLeft="701.178571428571,19.9285714285714" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="631.428571428571,251.357142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="69.75,-8.92857142857142"
              Start="0,0"
              End="62.25,-8.92857142857142">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.875,0" />
                  <mssgle:CubicBezierSegment
                    Point1="30.875,0"
                    Point2="34.875,0"
                    Point3="34.875,-4" />
                  <mssgle:LineSegment
                    End="34.875,-4.92857142857142" />
                  <mssgle:CubicBezierSegment
                    Point1="34.875,-4.92857142857142"
                    Point2="34.875,-8.92857142857142"
                    Point3="38.875,-8.92857142857142" />
                  <mssgle:LineSegment
                    End="62.25,-8.92857142857142" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="193,42"
          Id="Package\Secuencia 1\Transferencia de Datos"
          TopLeft="7,7" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,104"
          Size="205,147"
          Id="Package\Secuencia 1"
          TopLeft="2,62" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="207,135.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.4285714285714,115.857142857143"
              Start="0,0"
              End="44.9285714285714,115.857142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.2142857142857,0" />
                  <mssgle:CubicBezierSegment
                    Point1="22.2142857142857,0"
                    Point2="26.2142857142857,0"
                    Point3="26.2142857142857,4" />
                  <mssgle:LineSegment
                    End="26.2142857142857,111.857142857143" />
                  <mssgle:CubicBezierSegment
                    Point1="26.2142857142857,111.857142857143"
                    Point2="26.2142857142857,115.857142857143"
                    Point3="30.2142857142857,115.857142857143" />
                  <mssgle:LineSegment
                    End="44.9285714285714,115.857142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="220,42"
          Id="Package\Secuencia 4 Codigo 3\Consulta Registros Migrados"
          TopLeft="80,31.75" />
        <NodeLayout
          Size="243,42"
          Id="Package\Secuencia 4 Codigo 3\Foreach Loop Container\Actualizacion de Fecha Migracion"
          TopLeft="74.75,97.25" />
        <NodeLayout
          Size="336,42"
          Id="Package\Secuencia 4 Codigo 3\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
          TopLeft="21.5,5.5" />
        <EdgeLayout
          Id="Package\Secuencia 4 Codigo 3\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="192.875,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.75"
              Start="0,0"
              End="0,42.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="362,194"
          Size="362,237"
          Id="Package\Secuencia 4 Codigo 3\Foreach Loop Container"
          TopLeft="27.5,109" />
        <EdgeLayout
          Id="Package\Secuencia 4 Codigo 3.PrecedenceConstraints[Constraint]"
          TopLeft="190,73.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.5,35.25"
              Start="0,0"
              End="18.5,27.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.625" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.625"
                    Point2="0,17.625"
                    Point3="4,17.625" />
                  <mssgle:LineSegment
                    End="14.5,17.625" />
                  <mssgle:CubicBezierSegment
                    Point1="14.5,17.625"
                    Point2="18.5,17.625"
                    Point3="18.5,21.625" />
                  <mssgle:LineSegment
                    End="18.5,27.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="401,402"
          Size="401,445"
          Id="Package\Secuencia 4 Codigo 3"
          TopLeft="263.607142857143,531.357142857143" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="901.678571428571,464.928571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-503.071428571429,66.4285714285714"
              Start="0,0"
              End="-503.071428571429,58.9285714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.6987438790717" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.6987438790717"
                    Point2="0,39.6987438790717"
                    Point3="-4,39.6987438790717" />
                  <mssgle:LineSegment
                    End="-499.071428571429,39.6987438790717" />
                  <mssgle:CubicBezierSegment
                    Point1="-499.071428571429,39.6987438790717"
                    Point2="-503.071428571429,39.6987438790717"
                    Point3="-503.071428571429,43.6987438790717" />
                  <mssgle:LineSegment
                    End="-503.071428571429,58.9285714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="220,42"
          Id="Package\Secuencia 5 Codigo 4\Consulta Registros Migrados"
          TopLeft="80,31.75" />
        <NodeLayout
          Size="243,42"
          Id="Package\Secuencia 5 Codigo 4\Foreach Loop Container\Actualizacion de Fecha Migracion"
          TopLeft="74.75,97.25" />
        <NodeLayout
          Size="336,42"
          Id="Package\Secuencia 5 Codigo 4\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
          TopLeft="21.5,5.5" />
        <EdgeLayout
          Id="Package\Secuencia 5 Codigo 4\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="192.875,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.75"
              Start="0,0"
              End="0,42.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="362,194"
          Size="362,237"
          Id="Package\Secuencia 5 Codigo 4\Foreach Loop Container"
          TopLeft="27.5,109" />
        <EdgeLayout
          Id="Package\Secuencia 5 Codigo 4.PrecedenceConstraints[Constraint]"
          TopLeft="190,73.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.5,35.25"
              Start="0,0"
              End="18.5,27.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.625" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.625"
                    Point2="0,17.625"
                    Point3="4,17.625" />
                  <mssgle:LineSegment
                    End="14.5,17.625" />
                  <mssgle:CubicBezierSegment
                    Point1="14.5,17.625"
                    Point2="18.5,17.625"
                    Point3="18.5,21.625" />
                  <mssgle:LineSegment
                    End="18.5,27.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="401,402"
          Size="401,445"
          Id="Package\Secuencia 5 Codigo 4"
          TopLeft="702.857142857143,525.714285714286" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="664.607142857143,751.035714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="38.2500000000005,0"
              Start="0,0"
              End="30.7500000000005,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.7500000000005,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="220,42"
          Id="Package\Secuencia 6 Codigo 5\Consulta Registros Migrados"
          TopLeft="80,31.75" />
        <NodeLayout
          Size="243,42"
          Id="Package\Secuencia 6 Codigo 5\Foreach Loop Container\Actualizacion de Fecha Migracion"
          TopLeft="74.75,97.25" />
        <NodeLayout
          Size="336,42"
          Id="Package\Secuencia 6 Codigo 5\Foreach Loop Container\Depuracion de Registros en el Destino cuando Migra"
          TopLeft="21.5,5.5" />
        <EdgeLayout
          Id="Package\Secuencia 6 Codigo 5\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="192.875,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.75"
              Start="0,0"
              End="0,42.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="362,194"
          Size="362,237"
          Id="Package\Secuencia 6 Codigo 5\Foreach Loop Container"
          TopLeft="27.5,109" />
        <EdgeLayout
          Id="Package\Secuencia 6 Codigo 5.PrecedenceConstraints[Constraint]"
          TopLeft="190,73.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="18.5,35.25"
              Start="0,0"
              End="18.5,27.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.625" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.625"
                    Point2="0,17.625"
                    Point3="4,17.625" />
                  <mssgle:LineSegment
                    End="14.5,17.625" />
                  <mssgle:CubicBezierSegment
                    Point1="14.5,17.625"
                    Point2="18.5,17.625"
                    Point3="18.5,21.625" />
                  <mssgle:LineSegment
                    End="18.5,27.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="401,402"
          Size="401,445"
          Id="Package\Secuencia 6 Codigo 5"
          TopLeft="1229.04761904762,529.047619047619" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1103.85714285714,749.880952380952">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="125.190476190476,0"
              Start="0,0"
              End="117.690476190476,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="117.690476190476,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>