<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/28/2024 11:54:16 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-PJEIDUL"
  DTS:CreatorName="DESKTOP-PJEIDUL\Leonardo Mancero"
  DTS:DTSID="{C5ECAD1F-485A-43D3-AC9F-8B7580C2D69F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="12298"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="112"
  DTS:VersionGUID="{C4291FD3-EC37-49F7-84EF-516B9CF02149}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{93EB8763-83D6-4614-9DCA-0E7F200B9B6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="conexionDestino">
      <DTS:VariableValue
        DTS:DataType="8">Server=192.168.1.100;Database=SEICOII;User Id=Integrity;Password=conalBa0608;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5970596-9505-45EA-A6AF-2E6F85FD6866}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="conexionOrigen">
      <DTS:VariableValue
        DTS:DataType="8">Server=192.168.1.100;Database=SEICOII;User Id=Integrity;Password=conalBa0608;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Transferencia de Datos"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{5BAAEFA1-60F3-4DE3-9FB3-AA7AE45CDE73}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Transferencia de Datos"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d3ccaf3431b242539c8b716f26511831"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::conexionDestino,User::conexionOrigen">
          <ProjectItem
            Name="Models\Request.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_d3ccaf3431b242539c8b716f26511831.Models
{
    public class Request
    {
        public string tabla { get; set; }
        public List<string> columnas { get; set; }
        public List<object> valor { get; set; }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_d3ccaf3431b242539c8b716f26511831.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6DEBB0CA-D366-45DF-807B-F7B6E42E2F10}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d3ccaf3431b242539c8b716f26511831</RootNamespace>
    <AssemblyName>ST_d3ccaf3431b242539c8b716f26511831</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\isc_2\AppData\Local\Temp\Vsta\SSIS_ST160\VstaHuJIOF4T5UqSqx7HMqY__w\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Models\Request.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Utils\stringHandler.cs" />
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Entidades\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Settings.get_Default():ST_d3ccaf3431b242539c8b716f26511831.Properties.Sett" +
    "ings")]

namespace ST_d3ccaf3431b242539c8b716f26511831.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;
using ST_d3ccaf3431b242539c8b716f26511831.Utils;
using Newtonsoft.Json;
using System.Collections;
using ST_d3ccaf3431b242539c8b716f26511831.Models;
using System.Collections.Generic;
using Newtonsoft.Json.Linq;
#endregion

namespace ST_d3ccaf3431b242539c8b716f26511831
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        public string conexionOrigen { get; set; }
        public string conexionDestino { get; set; }

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            conexionOrigen = Dts.Variables["User::conexionOrigen"].Value.ToString();
            conexionDestino = Dts.Variables["User::conexionDestino"].Value.ToString();

            #region CODIGO1
            var consulta = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo1);
            if (consulta.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta.Tables.Count; i++)
                {
                    InsertTables(consulta.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta = null;

            var consultaUp = consultar(stringHandler.DestinoUpdate.Trim(), stringHandler.accionCodigo1);
            if (consultaUp.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consultaUp.Tables.Count; i++)
                {
                    InsertTables(consultaUp.Tables[i], stringHandler.DestinoUpdate.Trim());
                }
            }

            consultaUp = null;
            #endregion
            #region CODIGO2
            var consulta2 = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo2);
            if (consulta2.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta2.Tables.Count; i++)
                {
                    InsertTables(consulta2.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta2 = null;

            //var consultaUp2 = consultar(stringHandler.DestinoUpdate.Trim(), stringHandler.accionCodigo2);
            //if (consultaUp2.Tables.Count > 0)
            //{
            //    for (global::System.Int32 i = 0; i < consultaUp2.Tables.Count; i++)
            //    {
            //        InsertTables(consulta2.Tables[i], stringHandler.DestinoUpdate.Trim());
            //    }
            //}
            //consultaUp2 = null;
            #endregion
            #region CODIGO3
            var consulta3 = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo3);
            if (consulta3.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta3.Tables.Count; i++)
                {
                    InsertTables(consulta3.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta3 = null;
            #endregion
            #region CODIGO4
            var consulta4 = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo4);
            if (consulta4.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta4.Tables.Count; i++)
                {
                    InsertTables(consulta4.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta4 = null;
            #endregion
            #region CODIGO5
            var consulta5 = consultar(stringHandler.accionRegistro.Trim(), stringHandler.accionCodigo5);
            if (consulta5.Tables.Count > 0)
            {
                for (global::System.Int32 i = 0; i < consulta5.Tables.Count; i++)
                {
                    InsertTables(consulta5.Tables[i], stringHandler.accionRegistro.Trim());
                }
            }

            consulta5 = null;
            #endregion



        }

        public static string DataRowToJson(DataRow dataRow)
        {
            var dict = new System.Collections.Generic.Dictionary<string, object>();
            foreach (DataColumn column in dataRow.Table.Columns)
            {
                dict[column.ColumnName] = dataRow[column];
            }

            return JsonConvert.SerializeObject(dict);
        }

        private void InsertTables(DataTable dt, string tipo)
        {
            try
            {
                if (dt.Rows.Count > 0)
                {
                    var jsonText = string.Empty;
                    List<Request> datosResponse = new List<Request>();

                    foreach (DataRow row in dt.Rows)
                    {
                        jsonText += row[0].ToString();
                    }

                    JArray jsonObject = JArray.Parse(jsonText);
                    var tabla = jsonObject[0];
                    var nombreTable = string.Empty;
                    nombreTable= tabla["tabla"].ToString();
                    nombreTable = nombreTable + "_PRUEBA";
                    var ArrayList = JArray.Parse(tabla["datos"].ToString());

                   
                    foreach (var item in ArrayList)
                    {
                        var jsonSerializado = JsonConvert.SerializeObject(item);

                        var sinSegmento = 0;
                        string segmento = nombreTable.ToString();
                        var nombreSP = "";
                        segmento = segmento.Substring(0, 2).Trim();

                        switch (segmento)
                        {
                            case "FA":
                                nombreSP = stringHandler.sp_RegistroMigracionFa;
                                break;
                            case "CB":
                                Console.WriteLine("CB");
                                break;

                            default:
                                sinSegmento = 1;
                                break;
                        }

                        if (sinSegmento == 1)
                        {
                            continue;
                        }


                        SqlDataAdapter ad = new SqlDataAdapter();
                        DataSet ds = new DataSet();
                        SqlConnection Conexion = new SqlConnection(conexionDestino);
                        SqlCommand cmd = new SqlCommand();
                        Conexion.Open();
                        cmd.Connection = Conexion;
                        cmd.CommandText = nombreSP;
                        cmd.CommandType = CommandType.StoredProcedure;
                        cmd.Parameters.Add(new SqlParameter("@accion", tipo));
                        cmd.Parameters.Add(new SqlParameter("@nombreTable", nombreTable));
                        cmd.Parameters.Add(new SqlParameter("@json", jsonSerializado));
                        ad = new SqlDataAdapter(cmd);
                        ad.Fill(ds);
                        Conexion.Close();

                    }
                    
                }

                //foreach (DataRow row in dt.Rows)
                //{
                //    var codigo1 = string.Empty;


                //    var json = DataRowToJson(row);
                //    var sinSegmento = 0;
                //    var segmento = row["nombreTable"].ToString();
                //    codigo1 = row["idCodMigracion"].ToString();
                //    var nombreSP = "";
                //    segmento = segmento.Substring(0, 2).Trim();

                //    switch (segmento)
                //    {

                //        case "FA":
                //            nombreSP = stringHandler.sp_RegistroMigracionFa;
                //            break;

                //        case "CB":
                //            Console.WriteLine("CB");
                //            break;

                //        default:
                //            sinSegmento = 1;
                //            break;
                //    }

                //    if (sinSegmento == 1) {
                //        continue;
                //    }


                //    SqlDataAdapter ad = new SqlDataAdapter();
                //    DataSet ds = new DataSet();
                //    SqlConnection Conexion = new SqlConnection(conexionDestino);
                //    SqlCommand cmd = new SqlCommand();
                //    Conexion.Open();
                //    cmd.Connection = Conexion;
                //    cmd.CommandText = nombreSP;
                //    cmd.CommandType = CommandType.StoredProcedure;
                //    cmd.Parameters.Add(new SqlParameter("@accion", tipo));
                //    cmd.Parameters.Add(new SqlParameter("@nombreTable", row["nombreTable"].ToString()));
                //    cmd.Parameters.Add(new SqlParameter("@json", json));
                //    ad = new SqlDataAdapter(cmd);
                //    ad.Fill(ds);
                //    Conexion.Close();

                //    UpdateTableMigracion(codigo1, tipo, row["nombreTable"].ToString());
                //}

            }
            catch (Exception ex)
            {

                throw new Exception(ex.Message.ToString());
            }
        }

        private DataSet consultar(string tipo, string accion)
        {
            DataTable dt = new DataTable();
            SqlDataAdapter ad = new SqlDataAdapter();
            DataSet ds = new DataSet();
            try
            {
                SqlConnection Conexion = new SqlConnection(conexionOrigen);
                SqlCommand cmd = new SqlCommand();
                Conexion.Open();
                cmd.Connection = Conexion;
                cmd.CommandText = stringHandler.sp_MigracionCodigo;
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add(new SqlParameter("@accion", accion));
                cmd.Parameters.Add(new SqlParameter("@tipoU", tipo));
                ad = new SqlDataAdapter(cmd);
                ad.Fill(ds);
                Conexion.Close();
                return ds;
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message.ToString());
            }
        }

        private void UpdateTableMigracion(string codigo, string tipo, string nombreTabla)
        {
            try
            {
                DataTable dt = new DataTable();
                SqlDataAdapter ad = new SqlDataAdapter();
                DataSet ds = new DataSet();
                try
                {
                    SqlConnection Conexion = new SqlConnection(conexionOrigen);
                    SqlCommand cmd = new SqlCommand();
                    Conexion.Open();
                    cmd.Connection = Conexion;
                    cmd.CommandText = stringHandler.sp_MigracionCodigo;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add(new SqlParameter("@accion", stringHandler.accionModificaMigracion.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@codigoU", codigo.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@tipoU", tipo.Trim()));
                    cmd.Parameters.Add(new SqlParameter("@nombreTableU", nombreTabla.Trim()));
                    ad = new SqlDataAdapter(cmd);
                    ad.Fill(ds);
                    Conexion.Close();
                }
                catch (Exception ex)
                {
                    throw new Exception(ex.Message.ToString());
                }
            }
            catch (Exception)
            {

                throw;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d3ccaf3431b242539c8b716f26511831.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d3ccaf3431b242539c8b716f26511831.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_d3ccaf3431b242539c8b716f26511831</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_d3ccaf3431b242539c8b716f26511831</msb:DisplayName>
    <msb:ProjectId>{F4B53409-AF5A-4E4B-8A37-211971CC04A3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d3ccaf3431b242539c8b716f26511831.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Models\Request.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Utils\stringHandler.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="8c4081157877481380e3981eb754bf9d">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>109</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="a82f3cd7738f4e18b2e1eb5549c41c79">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>166</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="765a7f5441994e5a9d5549a65aa90a42">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>132</msb:LineNumber>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="f8f936bfb6a244f6b2d7e5d9d1b3df38">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>154</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="71b9964a1a9a49759265bfe4cad4035f">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>178</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d3ccaf3431b242539c8b716f26511831")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d3ccaf3431b242539c8b716f26511831")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Utils\stringHandler.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace ST_d3ccaf3431b242539c8b716f26511831.Utils
{
    public static class stringHandler
    {
        internal static string sp_MigracionCodigo = "sp_MigracionCodigo";
        internal static string sp_RegistroMigracionFa = "sp_RegistroMigracionFa";
        internal static string accionCodigo1 = "1";
        internal static string accionCodigo2 = "2";
        internal static string accionCodigo3 = "3";
        internal static string accionCodigo4 = "4";
        internal static string accionCodigo5 = "5";
        internal static string accionRegistro = "I";
        internal static string accionModificaMigracion = "U";     
        internal static string DestinoUpdate = "U";     

    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d3ccaf3431b242539c8b716f26511831.dll">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
CwC4JwAAAACTCIgCxgELAL8nAAAAAJMIlALMAQsAxycAAAAAlghSCtMBDADOJwAAAACGGDQIBgAM
ANYnAAAAAJEYOgjYAQwA5CcAAAAAkRg6CNgBDABVKAAAAACGCOAASAAMAF0oAAAAAIYI6gAQAAwA
ZigAAAAAhghBCNwBDQBuKAAAAACGCE4I5QENAHcoAAAAAIYIBgjvAQ4AfygAAAAAhggQCPgBDgCE
JwAAAACGGDQIBgAPAAAAAQDZBAAAAQDZBAAAAQDSCgAAAQBHCgAAAgCVBwAAAQCVBwAAAgBNBgAA
AQBmBwAAAgCVBwAAAwDUAAAAAQDZBAAAAQDZBAAAAQDZBAAAAQDZBAkANAgBABEANAgGABkANAgK
ACkANAgQADEANAgQADkANAgQAEEANAgQAEkANAgQAFEANAgQAFkANAgQAGEANAgQAGkANAgGAHkA
NAgGAPEANAgGABEBNAgVAHEAEQoxACkBOAk3ADEBqQU9ADkBzwREAKEA+QRIAEEBwgVIAIEAIAlM
AFEBkwpSAEkBqQVWAAwANAgGAJEA4gFyAMEA2wl3AFEBJgh9AKkAhwpEALEANwJIAJEAqQWCAAwA
sgWIAKkAsQqQALkABQMGAGEBNwqUAMEAJwqyAEEB+gq4ABQANAgGAJEAqQXDAEEBMArIAHEBDQPO
AHEBqQXVANEAqQXbAHEBJgjhABwAhwrxAEEBAgX2AEEB7gr8AHkBZgICAYEBNAgGAIEANAgGANkA
NAgQAIkBNAgGAJEBBQYGAIkB4gYHAZkBugoQAJkBcAINAYkB+gkUAbEBNAgaAakBJAEgAYEBNAgp
AbkBpAUwAZEB/wIGAOEA1gFIAOEANAgQAMEANAgGAHEANAgGAKEANAgGAMEBHQJGAcEB4QpPAfkA
NAhVARkBNAgGAAgAUAB4AQgAVAB9ASAAawB9ASEAawB9AS4ACwAoAi4AEwAxAi4AGwBQAi4AIwBZ
Ai4AKwCCAi4AMwCCAi4AOwCCAi4AQwBZAi4ASwCIAi4AUwCCAi4AWwCfAkAAawB9AUEAawB9AUMA
YwB9AWAAawB9AWMAcwB9AWkAewBQAoAAawB9AYkAewBQAqEAawB9AQECawB9ASECawB9AUECawB9
AWACawB9AYACawB9AaACawB9AcACawB9AeACawB9AQADawB9ARwAXACZADYBPwECAAEAAwADAAQA
BQAGAAYAAADvBQICAACFBwICAADMBwYCAACoAgsCAABWChECAADuAAICAABSCBYCAAAUCB8CAgAB
AAMAAQACAAMAAgADAAUAAQAEAAUAAgAMAAcAAgANAAkAAQAOAAkAAgAPAAsAAgATAA0AAQAUAA0A
AgAVAA8AAQAWAA8AAgAXABEAAQAYABEAawC7AOoABIAAAAEAAAB1I3COAAAAAAAAAQAAAAQAAAAA
AAAAAAAAAF0BAAEAAAAAEAAAAAAAAAAAAAAAZgEMBQAAAAAEAAAAAAAAAAAAAABdAfQAAAAAAAQA
AAAAAAAAAAAAAF0BxgkAAAAADQAAAAAAAAAAAAAAbwEpBwAAAAAEAAAAAAAAAAAAAABdAbsFAAAA
ABAAAAAAAAAAAAAAAGYBlgAAAAAAAAAAAAEAAACfCAAABwACAAAAAFNUX2QzY2NhZjM0MzFiMjQy
NTM5YzhiNzE2ZjI2NTExODMxAElFbnVtZXJhdG9yYDEATGlzdGAxAGFjY2lvbkNvZGlnbzEARGlj
dGlvbmFyeWAyAGFjY2lvbkNvZGlnbzIAYWNjaW9uQ29kaWdvMwBhY2Npb25Db2RpZ280AGFjY2lv
bkNvZGlnbzUAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18A
c3BfUmVnaXN0cm9NaWdyYWNpb25GYQBub21icmVUYWJsYQBnZXRfdGFibGEAc2V0X3RhYmxhAFN5
c3RlbS5EYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZAA8dGFibGE+
a19fQmFja2luZ0ZpZWxkADxjb25leGlvbk9yaWdlbj5rX19CYWNraW5nRmllbGQAPGNvbmV4aW9u
RGVzdGlubz5rX19CYWNraW5nRmllbGQAPHZhbG9yPmtfX0JhY2tpbmdGaWVsZAA8Y29sdW1uYXM+
a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRf
TWVzc2FnZQBnZXRfVGFibGUARGF0YVRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENvbnNvbGUAZ2V0X0NvbHVtbk5hbWUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAc2V0X0NvbW1hbmRUeXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBDbG9zZQBEaXNwb3NlAFBhcnNlAERlc3Rpbm9VcGRhdGUARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0Vu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRvU3RyaW5nAFN1YnN0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU1RfZDNjY2FmMzQzMWIyNDI1MzljOGI3MTZmMjY1MTE4MzEuZGxs
AEZpbGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAFRyaW0ARW51bQByZXNvdXJjZU1hbgBnZXRf
Y29uZXhpb25PcmlnZW4Ac2V0X2NvbmV4aW9uT3JpZ2VuAEpUb2tlbgBPcGVuAFNjcmlwdE1haW4A
RGF0YUNvbHVtbgBhY2Npb25Nb2RpZmljYU1pZ3JhY2lvbgBVcGRhdGVUYWJsZU1pZ3JhY2lvbgBh
Y2Npb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24ARGF0YVRhYmxlQ29sbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBTcWxQYXJh
bWV0ZXJDb2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAHNldF9Db25uZWN0aW9uAERiQ29ubmVj
dGlvbgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ATmV3dG9uc29m
dC5Kc29uAERhdGFSb3dUb0pzb24AQ3VsdHVyZUluZm8Ac3BfTWlncmFjaW9uQ29kaWdvAGNvZGln
bwBnZXRfY29uZXhpb25EZXN0aW5vAHNldF9jb25leGlvbkRlc3Rpbm8AdGlwbwBhY2Npb25SZWdp
c3RybwBOZXd0b25zb2Z0Lkpzb24uTGlucQBjb25zdWx0YXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBz
dHJpbmdIYW5kbGVyAFNxbFBhcmFtZXRlcgBTcWxEYXRhQWRhcHRlcgBnZXRfdmFsb3IAc2V0X3Zh
bG9yAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAGdldF9jb2x1bW5hcwBz
ZXRfY29sdW1uYXMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9kM2NjYWYzNDMxYjI0MjUzOWM4YjcxNmYyNjUxMTgz
MS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZDNjY2Fm
MzQzMWIyNDI1MzljOGI3MTZmMjY1MTE4MzEuUHJvcGVydGllcwBnZXRfVGFibGVzAEluc2VydFRh
YmxlcwBnZXRfVmFyaWFibGVzAFN5c3RlbS5XaW5kb3dzLkZvcm1zLlZpc3VhbFN0eWxlcwBTZXR0
aW5ncwBTVF9kM2NjYWYzNDMxYjI0MjUzOWM4YjcxNmYyNjUxMTgzMS5Nb2RlbHMAU1RfZDNjY2Fm
MzQzMWIyNDI1MzljOGI3MTZmMjY1MTE4MzEuVXRpbHMAU3lzdGVtLldpbmRvd3MuRm9ybXMAZ2V0
X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9QYXJhbWV0ZXJzAFN1Y2Nlc3MAZ2V0X0R0
cwBTY3JpcHRSZXN1bHRzAGdldF9Sb3dzAENvbmNhdABTZXJpYWxpemVPYmplY3QAZHQARGF0YVNl
dABnZXRfRGVmYXVsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVmlzdWFsU3R5bGVFbGVtZW50AGdl
dF9DdXJyZW50AGdldF9Db3VudABKc29uQ29udmVydABSZXF1ZXN0AE1vdmVOZXh0AHNldF9Db21t
YW5kVGV4dABEYXRhUm93AGRhdGFSb3cASkFycmF5AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBF
bXB0eQAAKVUAcwBlAHIAOgA6AGMAbwBuAGUAeABpAG8AbgBPAHIAaQBnAGUAbgAAK1UAcwBlAHIA
OgA6AGMAbwBuAGUAeABpAG8AbgBEAGUAcwB0AGkAbgBvAAALdABhAGIAbABhAAAPXwBQAFIAVQBF
AEIAQQAAC2QAYQB0AG8AcwAAAQAFRgBBAAAFQwBCAAAPQABhAGMAYwBpAG8AbgAAGUAAbgBvAG0A
YgByAGUAVABhAGIAbABlAAALQABqAHMAbwBuAAANQAB0AGkAcABvAFUAABFAAGMAbwBkAGkAZwBv
AFUAABtAAG4AbwBtAGIAcgBlAFQAYQBiAGwAZQBVAABxUwBUAF8AZAAzAGMAYwBhAGYAMwA0ADMA
MQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYAMgA2ADUAMQAxADgAMwAxAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAlcwBwAF8ATQBpAGcAcgBhAGMAaQBvAG4A
QwBvAGQAaQBnAG8AAC1zAHAAXwBSAGUAZwBpAHMAdAByAG8ATQBpAGcAcgBhAGMAaQBvAG4ARgBh
AAADMQAAAzIAAAMzAAADNAAAAzUAAANJAAADVQAAAAAAaR+ZX365r0qW2fjcWLDsGAAEIAEBCAMg
AAEFIAEBEREEIAEBDgYgAQERgIUUBwwSQRJBEkESQRJBEkEICAgICAgFIAASgJUFIAASgJkGIAES
gJ0cAyAAHAMgAA4FIAASgKUDIAAIBSABEmEIDgcEFRJNAg4cElUSWRJdBhUSTQIOHAQgABJhBSAA
EoCtBCAAElUFIAEcElkHIAIBEwATAQMgAAIEAAEOHBgHDA4OElUSSRJdFRJlARJpDggODhJBEm0F
IAASgLUCBg4HFRKAkQESGAQgARwIBQACDg4OBgABEoC5DgUgARJpCAUgARJpHAggABUSZQESaQYV
EmUBEmkEIAATAAUgAg4ICAUAAgIODgQAAQEOBSABARJtBiABARGA0QUgABKA1QUgAgEOHAggARKA
2RKA2QYgAQESgMUFIAEIEkEIBwMSQRJtEkEGBwISQRJtCAABEoDhEYDlBSAAEoDpByACAQ4SgOkI
t3pcVhk04IkIiYRdzYCAzJEIMK1P5rKmru0EAAAAAAQBAAAAAwYSfQQGEoCBAwYSEAcGFRKAkQEO
BwYVEoCRARwCBggDBhEcBQABDhJJBiACARJhDgYgAhJBDg4GIAMBDg4OBAAAEn0FAAASgIEGAAEB
EoCBBAAAEhADAAABCCAAFRKAkQEOCSABARUSgJEBDgggABUSgJEBHAkgAQEVEoCRARwDKAAOBAgA
En0FCAASgIEECAASEAgoABUSgJEBDggoABUSgJEBHAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZDNjY2FmMzQzMWIyNDI1MzljOGI3MTZmMjY1
MTE4MzEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAA1EEAAAAAAAAAAAAA7kEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOBBAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
GgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAHCOdSMAAAEAcI51Iz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
ZAAzAGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYAMgA2ADUAMQAx
ADgAMwAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkAMAA3ADcA
LgAzADYANAA2ADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZAAz
AGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYAMgA2ADUAMQAxADgA
MwAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AFQAXwBkADMAYwBjAGEAZgAzADQAMwAxAGIAMgA0ADIANQAzADkAYwA4AGIANwAxADYAZgAyADYA
NQAxADEAOAAzADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBU
AF8AZAAzAGMAYwBhAGYAMwA0ADMAMQBiADIANAAyADUAMwA5AGMAOABiADcAMQA2AGYAMgA2ADUA
MQAxADgAMwAxAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA5
ADAANwA3AC4AMwA2ADQANgA0AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA5ADAANwA3AC4AMwA2ADQANgA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAAAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="109"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="132"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="166"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="154"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="178"
            Column="13" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="193,42"
          Id="Package\Transferencia de Datos"
          TopLeft="313,154" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>